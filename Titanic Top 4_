{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Titanic Top 4%","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyM3czglBR9KNK0tHcwNc9Wn"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"WSX6ALEVIaEp"},"source":["# 양상블 학습\n","데이터의 값을 예측할때, 하나의 모델을 활용하는데, 여러개의 모델을 조화롭게 학습시켜 모델의 예측결과를 사용한다면 정확한 예측값을 구할수 있을것이다.\n","\n","앙상블학습은 여러개의 결정트리를 결합하여 하나의 결정트리보다 더 좋은 성능을 내는 머신러닝 기법이다.\n","앙상블 학습의 핵심은 여러개의 약분류기를 결합하여 강분류기를 만들어 정확성을 향상시킨다.\n","\n"]},{"cell_type":"markdown","metadata":{"id":"j9i8IhmGJx00"},"source":["# 배깅\n","배깅은 샘플을 여러번 뽑아 각 모델을 학습시켜 결과물을 집계하는 방법이다. (Parallel)\n","\n","#부스팅\n","가중치를 활용하여 강분류기로 만드는 방법(Sequential)\n"]},{"cell_type":"code","metadata":{"colab":{"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgZG8gewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwoKICAgICAgbGV0IHBlcmNlbnREb25lID0gZmlsZURhdGEuYnl0ZUxlbmd0aCA9PT0gMCA/CiAgICAgICAgICAxMDAgOgogICAgICAgICAgTWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCk7CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPSBgJHtwZXJjZW50RG9uZX0lIGRvbmVgOwoKICAgIH0gd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCk7CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":""}},"base_uri":"https://localhost:8080/","height":760},"id":"ocWjzSu6JaHs","executionInfo":{"status":"ok","timestamp":1628849402258,"user_tz":-540,"elapsed":19737,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"cb5615aa-1cfb-4552-a767-0c1ad2951550"},"source":["!pip install kaggle\n","from google.colab import files\n","files.upload()\n","!mkdir -p ~/.kaggle\n","!cp kaggle.json ~/.kaggle/\n","# permission warning이 일어나지 않도록\n","!chmod 600 ~/.kaggle/kaggle.json\n","\n","# 내가 참가한 모든 대회보기\n","!kaggle competitions list\n","!kaggle competitions download -c titanic"],"execution_count":109,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: kaggle in /usr/local/lib/python3.7/dist-packages (1.5.12)\n","Requirement already satisfied: python-dateutil in /usr/local/lib/python3.7/dist-packages (from kaggle) (2.8.1)\n","Requirement already satisfied: python-slugify in /usr/local/lib/python3.7/dist-packages (from kaggle) (5.0.2)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.7/dist-packages (from kaggle) (4.41.1)\n","Requirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from kaggle) (2.23.0)\n","Requirement already satisfied: six>=1.10 in /usr/local/lib/python3.7/dist-packages (from kaggle) (1.15.0)\n","Requirement already satisfied: certifi in /usr/local/lib/python3.7/dist-packages (from kaggle) (2021.5.30)\n","Requirement already satisfied: urllib3 in /usr/local/lib/python3.7/dist-packages (from kaggle) (1.24.3)\n","Requirement already satisfied: text-unidecode>=1.3 in /usr/local/lib/python3.7/dist-packages (from python-slugify->kaggle) (1.3)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests->kaggle) (3.0.4)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests->kaggle) (2.10)\n"],"name":"stdout"},{"output_type":"display_data","data":{"text/html":["\n","     <input type=\"file\" id=\"files-d93d84b5-7b48-42ac-a84c-19f973cb41db\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-d93d84b5-7b48-42ac-a84c-19f973cb41db\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["Saving kaggle.json to kaggle (2).json\n","Warning: Looks like you're using an outdated API Version, please consider updating (server 1.5.12 / client 1.5.4)\n","ref                                                  deadline             category            reward  teamCount  userHasEntered  \n","---------------------------------------------------  -------------------  ---------------  ---------  ---------  --------------  \n","contradictory-my-dear-watson                         2030-07-01 23:59:00  Getting Started     Prizes         71           False  \n","gan-getting-started                                  2030-07-01 23:59:00  Getting Started     Prizes        138           False  \n","tpu-getting-started                                  2030-06-03 23:59:00  Getting Started  Knowledge        190           False  \n","digit-recognizer                                     2030-01-01 00:00:00  Getting Started  Knowledge       1554           False  \n","titanic                                              2030-01-01 00:00:00  Getting Started  Knowledge      49122           False  \n","house-prices-advanced-regression-techniques          2030-01-01 00:00:00  Getting Started  Knowledge       4642           False  \n","connectx                                             2030-01-01 00:00:00  Getting Started  Knowledge        261           False  \n","nlp-getting-started                                  2030-01-01 00:00:00  Getting Started  Knowledge        904           False  \n","competitive-data-science-predict-future-sales        2022-12-31 23:59:00  Playground           Kudos      12303           False  \n","chaii-hindi-and-tamil-question-answering             2021-11-15 23:59:00  Research           $10,000         48           False  \n","nfl-health-and-safety-helmet-assignment              2021-11-02 23:59:00  Featured          $100,000         26           False  \n","rsna-miccai-brain-tumor-radiogenomic-classification  2021-10-15 23:59:00  Featured           $30,000        590           False  \n","landmark-retrieval-2021                              2021-10-01 23:59:00  Research              Swag          3           False  \n","landmark-recognition-2021                            2021-10-01 23:59:00  Research              Swag          4           False  \n","learnplatform-covid19-impact-on-digital-learning     2021-09-30 23:59:00  Analytics          $20,000          0           False  \n","g2net-gravitational-wave-detection                   2021-09-29 23:59:00  Research           $15,000        587           False  \n","optiver-realized-volatility-prediction               2021-09-27 23:59:00  Featured          $100,000       2048           False  \n","mlb-player-digital-engagement-forecasting            2021-09-15 23:59:00  Featured           $50,000        852           False  \n","tabular-playground-series-aug-2021                   2021-08-31 23:59:00  Playground            Swag       1042           False  \n","jane-street-market-prediction                        2021-08-23 23:59:00  Featured          $100,000       4245           False  \n","Warning: Looks like you're using an outdated API Version, please consider updating (server 1.5.12 / client 1.5.4)\n","train.csv: Skipping, found more recently modified local copy (use --force to force download)\n","gender_submission.csv: Skipping, found more recently modified local copy (use --force to force download)\n","test.csv: Skipping, found more recently modified local copy (use --force to force download)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HrGRo4h9KW1A","executionInfo":{"status":"ok","timestamp":1628849402259,"user_tz":-540,"elapsed":29,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"cdc0cd23-1bd4-4fe6-acc5-5222c478b18e"},"source":["!ls\n"],"execution_count":110,"outputs":[{"output_type":"stream","text":[" gender_submission.csv\t'kaggle (2).json'   sample_data   train.csv\n","'kaggle (1).json'\t kaggle.json\t    test.csv\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"b4Ekw1oNKW9f","executionInfo":{"status":"ok","timestamp":1628849402260,"user_tz":-540,"elapsed":23,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}}},"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","%matplotlib inline\n","\n","from collections import Counter\n","# 글자 수를 세주는 라이브러리\n","\n","from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier, GradientBoostingClassifier, ExtraTreesClassifier, VotingClassifier\n","from sklearn.discriminant_analysis import LinearDiscriminantAnalysis\n","\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.neural_network import MLPClassifier\n","# 다층 완전 연결 신경망을 만들어보기\n","# cnn은 sequential input data에 사용 가능하고, 고정길이에만 사용할 수 있음\n","from sklearn.svm import SVC\n","from sklearn.model_selection import GridSearchCV, cross_val_score, StratifiedKFold, learning_curve\n","\n","sns.set(style= 'white', context = 'notebook', palette = 'deep')\n","# background color/ 매체에 사용할 수 있도록 스타일링 \n"],"execution_count":111,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WceZkS3uKXBv","executionInfo":{"status":"ok","timestamp":1628849402261,"user_tz":-540,"elapsed":23,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"bb4c1911-993e-472e-946b-5981f89ad5e9"},"source":["# Load Data\n","# Load Train and Test Set\n","train = pd.read_csv('train.csv')\n","test = pd.read_csv('test.csv')\n","# IDtest = test['PassengerId']\n","IDtest = test.loc[:,'PassengerId']\n","IDtest"],"execution_count":112,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0       892\n","1       893\n","2       894\n","3       895\n","4       896\n","       ... \n","413    1305\n","414    1306\n","415    1307\n","416    1308\n","417    1309\n","Name: PassengerId, Length: 418, dtype: int64"]},"metadata":{"tags":[]},"execution_count":112}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"HFPD7ZWw9Phj","executionInfo":{"status":"ok","timestamp":1628849402261,"user_tz":-540,"elapsed":19,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"eeb1bb06-fffc-4c89-8695-6d9f7876bde4"},"source":["train.tail()"],"execution_count":113,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>886</th>\n","      <td>887</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>Montvila, Rev. Juozas</td>\n","      <td>male</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>211536</td>\n","      <td>13.00</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>887</th>\n","      <td>888</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Graham, Miss. Margaret Edith</td>\n","      <td>female</td>\n","      <td>19.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>112053</td>\n","      <td>30.00</td>\n","      <td>B42</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>888</th>\n","      <td>889</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Johnston, Miss. Catherine Helen \"Carrie\"</td>\n","      <td>female</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>W./C. 6607</td>\n","      <td>23.45</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>889</th>\n","      <td>890</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Behr, Mr. Karl Howell</td>\n","      <td>male</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>111369</td>\n","      <td>30.00</td>\n","      <td>C148</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>890</th>\n","      <td>891</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Dooley, Mr. Patrick</td>\n","      <td>male</td>\n","      <td>32.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>370376</td>\n","      <td>7.75</td>\n","      <td>NaN</td>\n","      <td>Q</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["     PassengerId  Survived  Pclass  ...   Fare Cabin  Embarked\n","886          887         0       2  ...  13.00   NaN         S\n","887          888         1       1  ...  30.00   B42         S\n","888          889         0       3  ...  23.45   NaN         S\n","889          890         1       1  ...  30.00  C148         C\n","890          891         0       3  ...   7.75   NaN         Q\n","\n","[5 rows x 12 columns]"]},"metadata":{"tags":[]},"execution_count":113}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"uyCTIyxu8OJw","executionInfo":{"status":"ok","timestamp":1628849402262,"user_tz":-540,"elapsed":18,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"1f30baa1-9fed-4f66-9406-1305edfcf0ab"},"source":["test.tail()"],"execution_count":114,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>413</th>\n","      <td>1305</td>\n","      <td>3</td>\n","      <td>Spector, Mr. Woolf</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>A.5. 3236</td>\n","      <td>8.0500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>414</th>\n","      <td>1306</td>\n","      <td>1</td>\n","      <td>Oliva y Ocana, Dona. Fermina</td>\n","      <td>female</td>\n","      <td>39.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>PC 17758</td>\n","      <td>108.9000</td>\n","      <td>C105</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>415</th>\n","      <td>1307</td>\n","      <td>3</td>\n","      <td>Saether, Mr. Simon Sivertsen</td>\n","      <td>male</td>\n","      <td>38.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>SOTON/O.Q. 3101262</td>\n","      <td>7.2500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>416</th>\n","      <td>1308</td>\n","      <td>3</td>\n","      <td>Ware, Mr. Frederick</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>359309</td>\n","      <td>8.0500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>417</th>\n","      <td>1309</td>\n","      <td>3</td>\n","      <td>Peter, Master. Michael J</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2668</td>\n","      <td>22.3583</td>\n","      <td>NaN</td>\n","      <td>C</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["     PassengerId  Pclass                          Name  ...      Fare  Cabin  Embarked\n","413         1305       3            Spector, Mr. Woolf  ...    8.0500    NaN         S\n","414         1306       1  Oliva y Ocana, Dona. Fermina  ...  108.9000   C105         C\n","415         1307       3  Saether, Mr. Simon Sivertsen  ...    7.2500    NaN         S\n","416         1308       3           Ware, Mr. Frederick  ...    8.0500    NaN         S\n","417         1309       3      Peter, Master. Michael J  ...   22.3583    NaN         C\n","\n","[5 rows x 11 columns]"]},"metadata":{"tags":[]},"execution_count":114}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yqBGOtXeKXFS","executionInfo":{"status":"ok","timestamp":1628849402262,"user_tz":-540,"elapsed":17,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"0d1aec15-edaa-4615-8327-351f4018d795"},"source":["def detect_outliers(df,n,features):\n","    \"\"\"\n","    Takes a dataframe df of features and returns a list of the indices\n","    corresponding to the observations containing more than n outliers according\n","    to the Tukey method.\n","    \"\"\"\n","    outlier_indices = []\n","    \n","    # iterate over features(columns)\n","    for col in features:\n","        # 1st quartile (25%)\n","        Q1 = np.percentile(df[col], 25)\n","        # 3rd quartile (75%)\n","        Q3 = np.percentile(df[col],75)\n","        # Interquartile range (IQR)\n","        IQR = Q3 - Q1\n","        \n","        # outlier step\n","        outlier_step = 1.5 * IQR\n","        \n","        print(f\"Q1 value is {Q1}.\") \n","        print(f\"Q3 value is {Q3}.\") \n","        print(f\"Then the IQR is {IQR}.\")\n","        # Determine a list of indices of outliers for feature col\n","        outlier_list_col = df[(df[col] < Q1 - outlier_step) | (df[col] > Q3 + outlier_step )].index\n","        \n","        # append the found outlier indices for col to the list of outlier indices \n","        outlier_indices.extend(outlier_list_col)\n","        # append는 그 자체를 원소로 넣고, extend는 각 항목들을 넣는다.\n","        \n","    # select observations containing more than 2 outliers\n","    outlier_indices = Counter(outlier_indices)        \n","    multiple_outliers = list( k for k, v in outlier_indices.items() if v > n )\n","    # list(i for i in range(10)) // 0부터 9까지 숫자를 생성하여 리스트를 생성한다.\n","\n","    return multiple_outliers  \n","# Age와 sibsp, parch, fare에서 이상값을 탐지하기로 결정하였고, 그리고 이 이상값들이 2개 이상의 이상값이 있는 값으로 간주했습니다\n","Outliers_to_drop = detect_outliers(train,2,[\"Age\",\"SibSp\",\"Parch\",\"Fare\"])\n","# parch : 함께 탑승한 부모또는 자녀의 수\n","# sibsp : 함께 탑승한 형제 또는 배우자의 수\n","Outliers_to_drop"],"execution_count":115,"outputs":[{"output_type":"stream","text":["Q1 value is nan.\n","Q3 value is nan.\n","Then the IQR is nan.\n","Q1 value is 0.0.\n","Q3 value is 1.0.\n","Then the IQR is 1.0.\n","Q1 value is 0.0.\n","Q3 value is 0.0.\n","Then the IQR is 0.0.\n","Q1 value is 7.9104.\n","Q3 value is 31.0.\n","Then the IQR is 23.0896.\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["[27, 88, 159, 180, 201, 324, 341, 792, 846, 863]"]},"metadata":{"tags":[]},"execution_count":115}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":359},"id":"GRiRL0JnKXIR","executionInfo":{"status":"ok","timestamp":1628849402263,"user_tz":-540,"elapsed":14,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"acd66b4a-0d56-4d86-8e71-c126ab9a684f"},"source":["train.loc[Outliers_to_drop] # Show the outliers rows\n"],"execution_count":116,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>27</th>\n","      <td>28</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>Fortune, Mr. Charles Alexander</td>\n","      <td>male</td>\n","      <td>19.0</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>19950</td>\n","      <td>263.00</td>\n","      <td>C23 C25 C27</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>88</th>\n","      <td>89</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Fortune, Miss. Mabel Helen</td>\n","      <td>female</td>\n","      <td>23.0</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>19950</td>\n","      <td>263.00</td>\n","      <td>C23 C25 C27</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>159</th>\n","      <td>160</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Sage, Master. Thomas Henry</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>8</td>\n","      <td>2</td>\n","      <td>CA. 2343</td>\n","      <td>69.55</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>180</th>\n","      <td>181</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Sage, Miss. Constance Gladys</td>\n","      <td>female</td>\n","      <td>NaN</td>\n","      <td>8</td>\n","      <td>2</td>\n","      <td>CA. 2343</td>\n","      <td>69.55</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>201</th>\n","      <td>202</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Sage, Mr. Frederick</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>8</td>\n","      <td>2</td>\n","      <td>CA. 2343</td>\n","      <td>69.55</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>324</th>\n","      <td>325</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Sage, Mr. George John Jr</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>8</td>\n","      <td>2</td>\n","      <td>CA. 2343</td>\n","      <td>69.55</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>341</th>\n","      <td>342</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Fortune, Miss. Alice Elizabeth</td>\n","      <td>female</td>\n","      <td>24.0</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>19950</td>\n","      <td>263.00</td>\n","      <td>C23 C25 C27</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>792</th>\n","      <td>793</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Sage, Miss. Stella Anna</td>\n","      <td>female</td>\n","      <td>NaN</td>\n","      <td>8</td>\n","      <td>2</td>\n","      <td>CA. 2343</td>\n","      <td>69.55</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>846</th>\n","      <td>847</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Sage, Mr. Douglas Bullen</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>8</td>\n","      <td>2</td>\n","      <td>CA. 2343</td>\n","      <td>69.55</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>863</th>\n","      <td>864</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Sage, Miss. Dorothy Edith \"Dolly\"</td>\n","      <td>female</td>\n","      <td>NaN</td>\n","      <td>8</td>\n","      <td>2</td>\n","      <td>CA. 2343</td>\n","      <td>69.55</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["     PassengerId  Survived  Pclass  ...    Fare        Cabin  Embarked\n","27            28         0       1  ...  263.00  C23 C25 C27         S\n","88            89         1       1  ...  263.00  C23 C25 C27         S\n","159          160         0       3  ...   69.55          NaN         S\n","180          181         0       3  ...   69.55          NaN         S\n","201          202         0       3  ...   69.55          NaN         S\n","324          325         0       3  ...   69.55          NaN         S\n","341          342         1       1  ...  263.00  C23 C25 C27         S\n","792          793         0       3  ...   69.55          NaN         S\n","846          847         0       3  ...   69.55          NaN         S\n","863          864         0       3  ...   69.55          NaN         S\n","\n","[10 rows x 12 columns]"]},"metadata":{"tags":[]},"execution_count":116}]},{"cell_type":"code","metadata":{"id":"Vodn69QhKXLg","executionInfo":{"status":"ok","timestamp":1628849403120,"user_tz":-540,"elapsed":52,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}}},"source":["# Drop Outliers\n","train = train.drop(Outliers_to_drop,axis=0).reset_index(drop=True)"],"execution_count":117,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5INAPq3mKXOg","executionInfo":{"status":"ok","timestamp":1628849403121,"user_tz":-540,"elapsed":52,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"7f651487-39e3-4a9f-bfc2-c31c713bd2fe"},"source":["# Join train and test dataset in order to obtain the same number of features during categorical conversion\n","# see feature engineering\n","\n","train_len = len(train)\n","dataset = pd.concat(objs=[train,test],axis = 0).reset_index(drop=True)\n","\n","train['PassengerId']"],"execution_count":118,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0        1\n","1        2\n","2        3\n","3        4\n","4        5\n","      ... \n","876    887\n","877    888\n","878    889\n","879    890\n","880    891\n","Name: PassengerId, Length: 881, dtype: int64"]},"metadata":{"tags":[]},"execution_count":118}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"cfgMUU_s85Wl","executionInfo":{"status":"ok","timestamp":1628849403122,"user_tz":-540,"elapsed":51,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"9922156a-0b4b-408e-e2ec-19cc71aac637"},"source":["dataset.tail()"],"execution_count":119,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1294</th>\n","      <td>1305</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","      <td>Spector, Mr. Woolf</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>A.5. 3236</td>\n","      <td>8.0500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>1295</th>\n","      <td>1306</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>Oliva y Ocana, Dona. Fermina</td>\n","      <td>female</td>\n","      <td>39.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>PC 17758</td>\n","      <td>108.9000</td>\n","      <td>C105</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>1296</th>\n","      <td>1307</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","      <td>Saether, Mr. Simon Sivertsen</td>\n","      <td>male</td>\n","      <td>38.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>SOTON/O.Q. 3101262</td>\n","      <td>7.2500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>1297</th>\n","      <td>1308</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","      <td>Ware, Mr. Frederick</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>359309</td>\n","      <td>8.0500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>1298</th>\n","      <td>1309</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","      <td>Peter, Master. Michael J</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2668</td>\n","      <td>22.3583</td>\n","      <td>NaN</td>\n","      <td>C</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      PassengerId  Survived  Pclass  ...      Fare Cabin  Embarked\n","1294         1305       NaN       3  ...    8.0500   NaN         S\n","1295         1306       NaN       1  ...  108.9000  C105         C\n","1296         1307       NaN       3  ...    7.2500   NaN         S\n","1297         1308       NaN       3  ...    8.0500   NaN         S\n","1298         1309       NaN       3  ...   22.3583   NaN         C\n","\n","[5 rows x 12 columns]"]},"metadata":{"tags":[]},"execution_count":119}]},{"cell_type":"code","metadata":{"id":"OwVUz-pGKXRl","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1628849403123,"user_tz":-540,"elapsed":49,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"90a105fe-2aa8-4e3e-d395-5b6745966439"},"source":["# check for null and missing value\n","\n","# fill empty and NaNs values with NaN\n","dataset = dataset.fillna(np.nan)\n","\n","\n","dataset.isnull().sum()\n"],"execution_count":120,"outputs":[{"output_type":"execute_result","data":{"text/plain":["PassengerId       0\n","Survived        418\n","Pclass            0\n","Name              0\n","Sex               0\n","Age             256\n","SibSp             0\n","Parch             0\n","Ticket            0\n","Fare              1\n","Cabin          1007\n","Embarked          2\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":120}]},{"cell_type":"code","metadata":{"id":"Rl6WMEqaKXU4","executionInfo":{"status":"ok","timestamp":1628849403124,"user_tz":-540,"elapsed":38,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}}},"source":["# https://dandyrilla.github.io/2017-08-12/pandas-10min/ 여기를 통해 데이터프레임 접근법 공부해보기\n"],"execution_count":121,"outputs":[]},{"cell_type":"code","metadata":{"id":"sVMGxsoNKXYH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1628849403126,"user_tz":-540,"elapsed":39,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"acbca45a-9d79-4dd1-c38a-6e6b3c1d43fe"},"source":["# Infos\n","train.info()\n","train.isnull().sum()"],"execution_count":122,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 881 entries, 0 to 880\n","Data columns (total 12 columns):\n"," #   Column       Non-Null Count  Dtype  \n","---  ------       --------------  -----  \n"," 0   PassengerId  881 non-null    int64  \n"," 1   Survived     881 non-null    int64  \n"," 2   Pclass       881 non-null    int64  \n"," 3   Name         881 non-null    object \n"," 4   Sex          881 non-null    object \n"," 5   Age          711 non-null    float64\n"," 6   SibSp        881 non-null    int64  \n"," 7   Parch        881 non-null    int64  \n"," 8   Ticket       881 non-null    object \n"," 9   Fare         881 non-null    float64\n"," 10  Cabin        201 non-null    object \n"," 11  Embarked     879 non-null    object \n","dtypes: float64(2), int64(5), object(5)\n","memory usage: 82.7+ KB\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["PassengerId      0\n","Survived         0\n","Pclass           0\n","Name             0\n","Sex              0\n","Age            170\n","SibSp            0\n","Parch            0\n","Ticket           0\n","Fare             0\n","Cabin          680\n","Embarked         2\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":122}]},{"cell_type":"code","metadata":{"id":"292talNVKXbh","colab":{"base_uri":"https://localhost:8080/","height":204},"executionInfo":{"status":"ok","timestamp":1628849403128,"user_tz":-540,"elapsed":31,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"4a0bb52c-849c-4ce0-fb72-be0fcaf52610"},"source":["train.head()"],"execution_count":123,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Braund, Mr. Owen Harris</td>\n","      <td>male</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>A/5 21171</td>\n","      <td>7.2500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n","      <td>female</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>PC 17599</td>\n","      <td>71.2833</td>\n","      <td>C85</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Heikkinen, Miss. Laina</td>\n","      <td>female</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>STON/O2. 3101282</td>\n","      <td>7.9250</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n","      <td>female</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>113803</td>\n","      <td>53.1000</td>\n","      <td>C123</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Allen, Mr. William Henry</td>\n","      <td>male</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>373450</td>\n","      <td>8.0500</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   PassengerId  Survived  Pclass  ...     Fare Cabin  Embarked\n","0            1         0       3  ...   7.2500   NaN         S\n","1            2         1       1  ...  71.2833   C85         C\n","2            3         1       3  ...   7.9250   NaN         S\n","3            4         1       1  ...  53.1000  C123         S\n","4            5         0       3  ...   8.0500   NaN         S\n","\n","[5 rows x 12 columns]"]},"metadata":{"tags":[]},"execution_count":123}]},{"cell_type":"code","metadata":{"id":"wY0u6g-AKXez","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1628849403129,"user_tz":-540,"elapsed":30,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"586a7cbf-2131-4333-f26d-9206e685dec6"},"source":["train.dtypes"],"execution_count":124,"outputs":[{"output_type":"execute_result","data":{"text/plain":["PassengerId      int64\n","Survived         int64\n","Pclass           int64\n","Name            object\n","Sex             object\n","Age            float64\n","SibSp            int64\n","Parch            int64\n","Ticket          object\n","Fare           float64\n","Cabin           object\n","Embarked        object\n","dtype: object"]},"metadata":{"tags":[]},"execution_count":124}]},{"cell_type":"code","metadata":{"id":"9C5wwzdzKXhs","colab":{"base_uri":"https://localhost:8080/","height":297},"executionInfo":{"status":"ok","timestamp":1628849403130,"user_tz":-540,"elapsed":25,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"88c744c3-299e-45b7-a39d-d1db5879dcf0"},"source":["# Summarize Data\n","# Summary and statistics\n","\n","train.describe()\n"],"execution_count":125,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>881.000000</td>\n","      <td>881.000000</td>\n","      <td>881.000000</td>\n","      <td>711.000000</td>\n","      <td>881.000000</td>\n","      <td>881.000000</td>\n","      <td>881.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>446.713961</td>\n","      <td>0.385925</td>\n","      <td>2.307605</td>\n","      <td>29.731603</td>\n","      <td>0.455165</td>\n","      <td>0.363224</td>\n","      <td>31.121566</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>256.617021</td>\n","      <td>0.487090</td>\n","      <td>0.835055</td>\n","      <td>14.547835</td>\n","      <td>0.871571</td>\n","      <td>0.791839</td>\n","      <td>47.996249</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.420000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>226.000000</td>\n","      <td>0.000000</td>\n","      <td>2.000000</td>\n","      <td>20.250000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>7.895800</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>448.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>28.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>14.454200</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>668.000000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>38.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>30.500000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>891.000000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>80.000000</td>\n","      <td>5.000000</td>\n","      <td>6.000000</td>\n","      <td>512.329200</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       PassengerId    Survived      Pclass  ...       SibSp       Parch        Fare\n","count   881.000000  881.000000  881.000000  ...  881.000000  881.000000  881.000000\n","mean    446.713961    0.385925    2.307605  ...    0.455165    0.363224   31.121566\n","std     256.617021    0.487090    0.835055  ...    0.871571    0.791839   47.996249\n","min       1.000000    0.000000    1.000000  ...    0.000000    0.000000    0.000000\n","25%     226.000000    0.000000    2.000000  ...    0.000000    0.000000    7.895800\n","50%     448.000000    0.000000    3.000000  ...    0.000000    0.000000   14.454200\n","75%     668.000000    1.000000    3.000000  ...    1.000000    0.000000   30.500000\n","max     891.000000    1.000000    3.000000  ...    5.000000    6.000000  512.329200\n","\n","[8 rows x 7 columns]"]},"metadata":{"tags":[]},"execution_count":125}]},{"cell_type":"code","metadata":{"id":"7x89XCWLKXlH","colab":{"base_uri":"https://localhost:8080/","height":272},"executionInfo":{"status":"ok","timestamp":1628849403645,"user_tz":-540,"elapsed":537,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"4d421eb3-a23f-4247-919c-6458303dee81"},"source":["# Correlation Matrix between numerical values\n","g = sns.heatmap(train[['Survived', 'SibSp','Parch', 'Age','Fare']].corr(),annot=True,fmt= '.2f',cmap = 'coolwarm')\n","# Fare이 Survived와 유의미한 상관관계를 보임을 확인할 수 있다 (0.26)\n","# 하지만 나머지가 이와 상관관계가 없다는 것을 뜻하지는 않는다. 그래서 추가적인 확인이 필요하다."],"execution_count":126,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 2 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"9PUW5EiVKXoO","colab":{"base_uri":"https://localhost:8080/","height":526},"executionInfo":{"status":"ok","timestamp":1628849404337,"user_tz":-540,"elapsed":703,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"90ade7a7-15c1-4d2f-d8ce-3d5503725ab7"},"source":["# Explore SibSp feature vs Survived\n","sns. set_palette('bright')\n","g = sns.factorplot(x = 'SibSp', y = 'Survived', data = train, kind = 'bar', size = 6,palette = 'muted')\n","# 검은색은 error bar 라는 뜻 , 막대의 길이가 길수록 데이터가 퍼져있음을 알 수 있다.\n","\n","# g.despine(left = True) # 축, 테두리 제거\n","g = g.set_ylabels('Survival probability')"],"execution_count":127,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/seaborn/categorical.py:3714: UserWarning: The `factorplot` function has been renamed to `catplot`. The original name will be removed in a future release. Please update your code. Note that the default `kind` in `factorplot` (`'point'`) has changed `'strip'` in `catplot`.\n","  warnings.warn(msg)\n","/usr/local/lib/python3.7/dist-packages/seaborn/categorical.py:3720: UserWarning: The `size` parameter has been renamed to `height`; please update your code.\n","  warnings.warn(msg, UserWarning)\n"],"name":"stderr"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x432 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":526},"id":"rTTqyB6o0hpG","executionInfo":{"status":"ok","timestamp":1628849404883,"user_tz":-540,"elapsed":560,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"30e2d7c8-23e0-4ccd-c1d0-c28614a74390"},"source":["# Explore Parch feature vs Survived\n","g = sns.factorplot(x= 'Parch', y= 'Survived', data = train,kind ='bar', size = 6)\n","g. despine(left = True)\n","g = g.set_ylabels('Survival Probability')\n","\n","# 결과분석 : small families have more chance to survive, more than single(0), medium and large families(5~6)"],"execution_count":128,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/seaborn/categorical.py:3714: UserWarning: The `factorplot` function has been renamed to `catplot`. The original name will be removed in a future release. Please update your code. Note that the default `kind` in `factorplot` (`'point'`) has changed `'strip'` in `catplot`.\n","  warnings.warn(msg)\n","/usr/local/lib/python3.7/dist-packages/seaborn/categorical.py:3720: UserWarning: The `size` parameter has been renamed to `height`; please update your code.\n","  warnings.warn(msg, UserWarning)\n"],"name":"stderr"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x432 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":221},"id":"AIU_N7GQ0hwS","executionInfo":{"status":"ok","timestamp":1628849406130,"user_tz":-540,"elapsed":1253,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"96650e22-f8a6-479b-fa45-d8f728362b43"},"source":["# Explore Age vs Survived\n","# f,ax = plt.subplots(1,1,figsize=(18,8))\n","g= sns.FacetGrid(train, col = 'Survived')\n","g= g.map(sns.distplot, 'Age')\n","\n","# 연령 분포가 살아남은 사람들과 그렇지 않은사람들 간에 연령 범주가 동일하지 않음을 관찰할 수 있다.\n"],"execution_count":129,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x216 with 2 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":285},"id":"-ArJ4aZI0h03","executionInfo":{"status":"ok","timestamp":1628849406776,"user_tz":-540,"elapsed":648,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"b6f2a938-e4f9-4128-e4de-efe923bc439c"},"source":["# Explore Age Distribution\n","g = sns.kdeplot(train['Age'][(train['Survived']==0)&(train['Age'].notnull())],color='Red',shade=True)\n","g= sns.kdeplot(train['Age'][(train['Survived']==1)&(train['Age'].notnull())],ax = g, color ='Blue',shade = True)\n","g. set_xlabel('Age')\n","g. set_ylabel('Frequency')\n","g = g.legend(['Not Survived', 'Survived'])"],"execution_count":130,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5UIDDNfN0h4r","executionInfo":{"status":"ok","timestamp":1628849406777,"user_tz":-540,"elapsed":14,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"b2eccdea-2926-454d-ef08-a8c9f01171ae"},"source":["dataset['Fare'].isnull().sum()"],"execution_count":131,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{"tags":[]},"execution_count":131}]},{"cell_type":"code","metadata":{"id":"PN9WCb0Y0h7x","executionInfo":{"status":"ok","timestamp":1628849406778,"user_tz":-540,"elapsed":11,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}}},"source":["# Fill Fare Missing values with the median Value\n","dataset['Fare'] = dataset['Fare'].fillna(dataset['Fare'].median())"],"execution_count":132,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":537},"id":"YLxhfsZ40h_G","executionInfo":{"status":"ok","timestamp":1628849407250,"user_tz":-540,"elapsed":482,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"ecc3a551-ac41-4263-d123-38ff4b80001d"},"source":["# Explore Fare Distribution \n","g = sns.distplot(dataset['Fare'],color = 'm', label='Skewness : %.2f'%(dataset['Fare'].skew()))\n","# 데이터셋의 불균형을 뜻하는 것 같다.\n","\n","g = g.legend(loc = ' best') # legend의 위치 조정\n","\n","# fare Distribution이 굉장히 치우쳐져 있어서, 아마 많이 낸 사람에 대해 과대적합이 이뤄질 예정이다.\n","# 그래서, log function을 토해서 skew를 줄여야한다."],"execution_count":133,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:5: MatplotlibDeprecationWarning: Unrecognized location ' best'. Falling back on 'best'; valid locations are\n","\tbest\n","\tupper right\n","\tupper left\n","\tlower left\n","\tlower right\n","\tright\n","\tcenter left\n","\tcenter right\n","\tlower center\n","\tupper center\n","\tcenter\n","This will raise an exception in 3.3.\n","  \"\"\"\n"],"name":"stderr"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":285},"id":"hnup_Uqd0iCC","executionInfo":{"status":"ok","timestamp":1628849407788,"user_tz":-540,"elapsed":542,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"ab7a1410-6221-41b2-dfed-305ca9d46b64"},"source":["# fare을 log를 취해야 한다.\n","dataset['Fare'] = dataset['Fare'].map(lambda i : np.log(i) if i> 0 else 0)\n","# dataset['Fare']을 모두 받아서 log를 취해준다.\n","g = sns.distplot(dataset['Fare'],color = 'b',label = 'Skewness: %.2f'%(dataset['Fare'].skew()))\n","g= g.legend(loc = 'best')"],"execution_count":134,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"P2sgLmyS8JZK","executionInfo":{"status":"ok","timestamp":1628849407789,"user_tz":-540,"elapsed":10,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}}},"source":[""],"execution_count":134,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":285},"id":"he_RgFug0iFE","executionInfo":{"status":"ok","timestamp":1628849407790,"user_tz":-540,"elapsed":10,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"ac003c91-9d4a-4e72-a1aa-4c59a9ac17e8"},"source":["g = sns.barplot(x = 'Sex', y = 'Survived', data =train)\n","g= g.set_ylabel('Survival Probability')"],"execution_count":135,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"J5nKVmCJ0iH8","executionInfo":{"status":"ok","timestamp":1628849407790,"user_tz":-540,"elapsed":8,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}}},"source":["a =train[['Sex', 'Survived']].groupby('Sex').mean()\n","# a.head()\n","\n","# Male이 Female보다 여성보다 적은 생존의 기회를 가짐은 자명한거같다.\n","# 그래서 성별이 가장 중요한 생존의 요건이라고 생각된다."],"execution_count":136,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":526},"id":"eZU5OLDl-hyO","executionInfo":{"status":"ok","timestamp":1628849408678,"user_tz":-540,"elapsed":895,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"21cc312b-955d-40db-f97b-1231d8fa996a"},"source":["# Explore Pclass vs Survived\n","g = sns.factorplot(x= 'Pclass', y = 'Survived', data = train, kind = 'bar', size = 6)\n","g.despine(left = True)\n","g = g.set_ylabels('Survival Probability')"],"execution_count":137,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/seaborn/categorical.py:3714: UserWarning: The `factorplot` function has been renamed to `catplot`. The original name will be removed in a future release. Please update your code. Note that the default `kind` in `factorplot` (`'point'`) has changed `'strip'` in `catplot`.\n","  warnings.warn(msg)\n","/usr/local/lib/python3.7/dist-packages/seaborn/categorical.py:3720: UserWarning: The `size` parameter has been renamed to `height`; please update your code.\n","  warnings.warn(msg, UserWarning)\n"],"name":"stderr"},{"output_type":"display_data","data":{"image/png":"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v2wvTLRlOxWZ59iynWB68MOzVHkkUvFnfK3cy3aGepyTkjivPNQjwACW9tRGjhypN998s9Fjb731lkaNGhWMmQBYdIbD3+grcLpr9j21WbNmBS494/P5dPfdd+uiiy4KvKe2efNmjRkzxrZBATSVcnaNVu/qrqSetaEeBWgTmo1a7969G90/77zzArf79eunYcOGBW8qAJb0jz6s/tGHQz0G0GY0G7U777zTzjkAADhplj+ntn79ehUWFgY+p5aSkqIhQ4YEczYAAFrE0oEiy5Yt01133aXY2FiNGzdOcXFxuvfee/XSSy8Fez4AACyztKf2/PPPa9GiRY0+aD1+/HjNnDlTN9xwQ9CGAwCgJSztqdXW1jY5z2OfPn20f//+oAwFAEBrWIrawIED9dhjj+nw4W+Psqqrq9OCBQs0YMCAoA4HAEBLWHr5MScnR/fcc48GDRqkqKgo7d+/XwMGDNBvfvObYM8HAIBlJ4yaz+fTO++8oz/+8Y/at29f4OjHhIQEO+YDAMCyE7786HA49Nhjj6ljx45KSEjQJZdcQtAAAG2SpffURo8e3eTcjwAAtDWW3lM7evSoZs6cqQEDBighISFwTkhJWrBgQdCGAwCgJSxF7bzzzmt07kcAANqiE0btq6++0ujRo9W7d2916dLFjpkAAGiV476n9vbbb2v48OG6/vrrNXLkSK1bt86uuQAAaLHjRm3hwoW67777tHHjRs2cOVNPPPGEXXMBANBix43aF198oWnTpqlTp06aOnWqPv/8c7vmAgCgxY4btYaGhsDtiIgI+Xy+oA8EAEBrHfdAkSNHjmjq1KmB+4cOHWp0X5KWLl0anMkAAGih40btkUceaXR/8uTJQR0GAICTcdyoTZo0ya45AAA4aZZOkwUAQHtA1AAAxiBqAABjEDUAgDGaPVBk4cKFln7BL37xi1M2DAAAJ6PZqO3Zs8fOOQAAOGnNRu3RRx+1cw4AAE6apeupfefgwYPat29fo8d69ep1SgcCAKC1LEXt008/1X333aetW7cqLCxMfr8/cPXrLVu2BHVAAACssnT0Y05Ojq644gq9//776tKliz744AOlpaXpscceC/Z8AABYZilqW7du1X333adu3brJ7/era9euuv/++y0fIQkAgB0sRa1jx4765ptvJElnnnmmdu/erYaGBtXW1gZ1OAAAWsLSe2qX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\n","text/plain":["<Figure size 432x432 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":526},"id":"0Oou_W__-h3P","executionInfo":{"status":"ok","timestamp":1628849409670,"user_tz":-540,"elapsed":997,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"c1f755f6-320b-49a3-ee8f-b881cb1d6bd7"},"source":["# Explore Pclass vs Survived by Sex\n","g = sns.factorplot(x= 'Pclass', y= 'Survived', hue = 'Sex', data=train, size=6, kind = 'bar', palette = 'muted')\n","# hue : 구분값\n","g. despine(left = True)\n","g = g.set_ylabels('Survival Probability')"],"execution_count":138,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/seaborn/categorical.py:3714: UserWarning: The `factorplot` function has been renamed to `catplot`. The original name will be removed in a future release. Please update your code. Note that the default `kind` in `factorplot` (`'point'`) has changed `'strip'` in `catplot`.\n","  warnings.warn(msg)\n","/usr/local/lib/python3.7/dist-packages/seaborn/categorical.py:3720: UserWarning: The `size` parameter has been renamed to `height`; please update your code.\n","  warnings.warn(msg, UserWarning)\n"],"name":"stderr"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 509.975x432 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R3JmNrlZ-h7B","executionInfo":{"status":"ok","timestamp":1628849409670,"user_tz":-540,"elapsed":12,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"c2bfe6e4-a0fc-44aa-de83-6344b3584158"},"source":["dataset['Embarked'].isnull().sum()"],"execution_count":139,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2"]},"metadata":{"tags":[]},"execution_count":139}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":285},"id":"QSBcZY99-h-j","executionInfo":{"status":"ok","timestamp":1628849409671,"user_tz":-540,"elapsed":8,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"01d25338-d19d-4738-f06b-f4d05a078f39"},"source":["# Fill Embarked nan values of dataset with 'S' most frequent value\n","sns.countplot('Embarked',hue = 'Sex',data=train)\n","\n","dataset['Embarked'] = dataset['Embarked'].fillna('S')"],"execution_count":140,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":526},"id":"6nEgAPnY-iCD","executionInfo":{"status":"ok","timestamp":1628849410287,"user_tz":-540,"elapsed":622,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"d33d4601-5f8d-4443-e673-ec1c32197789"},"source":["# Explore Embarked vs Survived\n","g = sns.factorplot(x = 'Embarked', y = 'Survived', data = train, size = 6, kind = 'bar', palette = 'muted')\n","g. despine(left = True)\n","g = g.set_ylabels('Survival Probability')"],"execution_count":141,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/seaborn/categorical.py:3714: UserWarning: The `factorplot` function has been renamed to `catplot`. The original name will be removed in a future release. Please update your code. Note that the default `kind` in `factorplot` (`'point'`) has changed `'strip'` in `catplot`.\n","  warnings.warn(msg)\n","/usr/local/lib/python3.7/dist-packages/seaborn/categorical.py:3720: UserWarning: The `size` parameter has been renamed to `height`; please update your code.\n","  warnings.warn(msg, UserWarning)\n"],"name":"stderr"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x432 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":526},"id":"6nYjUm9t-iFc","executionInfo":{"status":"ok","timestamp":1628849411280,"user_tz":-540,"elapsed":1000,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"3c8c349a-363d-4c65-b487-9b0c4f85a449"},"source":["# Explore Pclass vs Embarked\n","g = sns.factorplot('Pclass', col = 'Embarked', data = train, size = 6, kind = 'count', palette = 'muted')\n","# col, row를 embarked로 묶어서 표현해줍니다.\n","g.despine(left = True)\n","g = g.set_ylabels('Count')"],"execution_count":142,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/seaborn/categorical.py:3714: UserWarning: The `factorplot` function has been renamed to `catplot`. The original name will be removed in a future release. Please update your code. Note that the default `kind` in `factorplot` (`'point'`) has changed `'strip'` in `catplot`.\n","  warnings.warn(msg)\n","/usr/local/lib/python3.7/dist-packages/seaborn/categorical.py:3720: UserWarning: The `size` parameter has been renamed to `height`; please update your code.\n","  warnings.warn(msg, UserWarning)\n"],"name":"stderr"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1296x432 with 3 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"_qpu0RZg-iI1","executionInfo":{"status":"ok","timestamp":1628849413622,"user_tz":-540,"elapsed":2346,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"78e31b51-1a31-4b82-b93d-9b1316a8311a"},"source":["# f, ax = plt.subplots(1,4,figsize=(15,8))\n","# age에 대해서 공선성 조사\n","\n","g = sns.factorplot(y = 'Age', x = 'Sex', data = dataset, kind = 'box')#,ax=ax[0])\n","g = sns.factorplot(y= 'Age', x= 'Sex', hue = 'Pclass', data= dataset, kind= 'box')#,ax=ax[1])\n","g = sns.factorplot(y = 'Age', x= 'Parch', data=dataset, kind = 'box')#,ax=ax[2])\n","g= sns.factorplot(y = 'Age', x= 'SibSp', data=dataset, kind = 'box')#,ax=ax[3])\n","# catplot은 ax를 지원하지 않는다, "],"execution_count":143,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/seaborn/categorical.py:3714: UserWarning: The `factorplot` function has been renamed to `catplot`. The original name will be removed in a future release. Please update your code. Note that the default `kind` in `factorplot` (`'point'`) has changed `'strip'` in `catplot`.\n","  warnings.warn(msg)\n","/usr/local/lib/python3.7/dist-packages/seaborn/categorical.py:3714: UserWarning: The `factorplot` function has been renamed to `catplot`. The original name will be removed in a future release. Please update your code. Note that the default `kind` in `factorplot` (`'point'`) has changed `'strip'` in `catplot`.\n","  warnings.warn(msg)\n","/usr/local/lib/python3.7/dist-packages/seaborn/categorical.py:3714: UserWarning: The `factorplot` function has been renamed to `catplot`. The original name will be removed in a future release. Please update your code. Note that the default `kind` in `factorplot` (`'point'`) has changed `'strip'` in `catplot`.\n","  warnings.warn(msg)\n","/usr/local/lib/python3.7/dist-packages/seaborn/categorical.py:3714: UserWarning: The `factorplot` function has been renamed to `catplot`. The original name will be removed in a future release. Please update your code. Note that the default `kind` in `factorplot` (`'point'`) has changed `'strip'` in `catplot`.\n","  warnings.warn(msg)\n"],"name":"stderr"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 360x360 with 1 Axes>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 406.6x360 with 1 Axes>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 360x360 with 1 Axes>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 360x360 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"pv7I6fTq-iL8","executionInfo":{"status":"ok","timestamp":1628849413623,"user_tz":-540,"elapsed":6,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}}},"source":["#  연령 분포는 남성과 여성 하위 모집단에서 동일한 분포를 보이므로, 성별은 연령을 예측하는데 유용하지 않다\n","# 1,2 좌석은 3 좌석보다 대체적으로 연령대가 높다.\n","# 승객이 나이가 많을 수록 부모, 자녀가 많고 더어린 형제/배우자가 있다."],"execution_count":144,"outputs":[]},{"cell_type":"code","metadata":{"id":"sQ8j6v6l-iPG","executionInfo":{"status":"ok","timestamp":1628849413623,"user_tz":-540,"elapsed":5,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}}},"source":["# Convert Sex Into Categorical value 0 for male and 1 for female\n","dataset['Sex'] = dataset['Sex'].map({'male' : 0, 'female':1})"],"execution_count":145,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":272},"id":"zKwcmAukFT9Q","executionInfo":{"status":"ok","timestamp":1628849414154,"user_tz":-540,"elapsed":536,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"8c18bf4b-23ad-46ee-c6a7-8f68d593d978"},"source":["g = sns.heatmap(dataset[['Age','Sex','SibSp','Parch', 'Pclass']].corr(),cmap= 'BrBG', annot=True)"],"execution_count":146,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 2 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Dcj-yDWNFUBA","executionInfo":{"status":"ok","timestamp":1628849414155,"user_tz":-540,"elapsed":22,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"f5b9cbd2-f3e5-4bee-bf73-771a9209af43"},"source":["dataset.isnull().sum()"],"execution_count":147,"outputs":[{"output_type":"execute_result","data":{"text/plain":["PassengerId       0\n","Survived        418\n","Pclass            0\n","Name              0\n","Sex               0\n","Age             256\n","SibSp             0\n","Parch             0\n","Ticket            0\n","Fare              0\n","Cabin          1007\n","Embarked          0\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":147}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RxKSlnVoFUEh","executionInfo":{"status":"ok","timestamp":1628849414726,"user_tz":-540,"elapsed":588,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"84e85481-6c06-4b4b-e0c4-7ab57dd69a56"},"source":["# Sibsp와 Parch, Pclass를 통해 빠진 age를 채우기로 했다.\n","\n","# Filling missing Value of Age\n","# Fill Age with the median age of similar rows according to Pclass, Parch and Sibsp\n","index_NaN_age = list(dataset['Age'][dataset['Age'].isnull()].index)\n","# index_NaN_age <- Index of NaN age rows\n","\n","for i in index_NaN_age:\n","  age_med = dataset['Age'].median()\n","  # age_pred = dataset[\"Age\"][((dataset['SibSp'] == dataset.iloc[i][\"SibSp\"]) & (dataset['Parch'] == dataset.iloc[i][\"Parch\"])&(dataset['Pclass'] == dataset.iloc[i][\"Pclass\"]))].median()\n","  age_pred = dataset['Age'][((dataset['SibSp']==dataset.iloc[i]['SibSp'])&(dataset['Parch']==dataset.iloc[i]['Parch'])&(dataset['Pclass']==dataset.iloc[i]['Pclass']))].median()\n","  if not np.isnan(age_pred):\n","    dataset['Age'].iloc[i] = age_pred\n","  else:\n","    dataset['Age'].iloc[i]= age_med\n"],"execution_count":148,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n","/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:670: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  iloc._setitem_with_indexer(indexer, value)\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":819},"id":"4g-3K14kFUIj","executionInfo":{"status":"ok","timestamp":1628849415657,"user_tz":-540,"elapsed":986,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"fcb9f2f3-f47f-4c2f-f52a-91497c5dec8d"},"source":["g =sns.factorplot(x = 'Survived',y = 'Age', data = train,kind = 'box')\n","g = sns.factorplot(x= 'Survived', y= 'Age', data=train, kind = 'violin')"],"execution_count":149,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/seaborn/categorical.py:3714: UserWarning: The `factorplot` function has been renamed to `catplot`. The original name will be removed in a future release. Please update your code. Note that the default `kind` in `factorplot` (`'point'`) has changed `'strip'` in `catplot`.\n","  warnings.warn(msg)\n","/usr/local/lib/python3.7/dist-packages/seaborn/categorical.py:3714: UserWarning: The `factorplot` function has been renamed to `catplot`. The original name will be removed in a future release. Please update your code. Note that the default `kind` in `factorplot` (`'point'`) has changed `'strip'` in `catplot`.\n","  warnings.warn(msg)\n"],"name":"stderr"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 360x360 with 1 Axes>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 360x360 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"w3dgHZ5YFUK2","executionInfo":{"status":"ok","timestamp":1628849415658,"user_tz":-540,"elapsed":21,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"59e3d6c3-6dc7-4dba-9ec3-84692deda1bc"},"source":["dataset['Name'].head()"],"execution_count":150,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0                              Braund, Mr. Owen Harris\n","1    Cumings, Mrs. John Bradley (Florence Briggs Th...\n","2                               Heikkinen, Miss. Laina\n","3         Futrelle, Mrs. Jacques Heath (Lily May Peel)\n","4                             Allen, Mr. William Henry\n","Name: Name, dtype: object"]},"metadata":{"tags":[]},"execution_count":150}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LkMwYRTEFUOO","executionInfo":{"status":"ok","timestamp":1628849415659,"user_tz":-540,"elapsed":13,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"07deb624-c073-4b57-e677-1ce688efadb6"},"source":["# Get Title from Name\n","dataset_title = [i.split(\",\")[1].split('.')[0].strip() for i in dataset['Name']]\n","# 문자열 파이썬 다시 공부할 필요가 있어보임.\n","dataset['Title'] = pd.Series(dataset_title)\n","dataset['Title'].head()"],"execution_count":151,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      Mr\n","1     Mrs\n","2    Miss\n","3     Mrs\n","4      Mr\n","Name: Title, dtype: object"]},"metadata":{"tags":[]},"execution_count":151}]},{"cell_type":"code","metadata":{"id":"ZZpT6wRL7-I7","executionInfo":{"status":"ok","timestamp":1628849416313,"user_tz":-540,"elapsed":662,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}}},"source":[""],"execution_count":151,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":333},"id":"tV-oCVMqFUSM","executionInfo":{"status":"ok","timestamp":1628849416315,"user_tz":-540,"elapsed":13,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"9676f0d9-9e00-4408-fc03-489555523a66"},"source":["g = sns.countplot(x = 'Title', data =dataset)\n","g = plt.setp(g.get_xticklabels(),rotation =45)\n"],"execution_count":152,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"g_Srq64MFUUp","executionInfo":{"status":"ok","timestamp":1628849416316,"user_tz":-540,"elapsed":12,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}}},"source":["# Convert to categorical values Title \n","dataset[\"Title\"] = dataset[\"Title\"].replace(['Lady', 'the Countess','Countess','Capt', 'Col','Don', 'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer', 'Dona'], 'Rare')\n","dataset[\"Title\"] = dataset[\"Title\"].map({\"Master\":0, \"Miss\":1, \"Ms\" : 1 , \"Mme\":1, \"Mlle\":1, \"Mrs\":1, \"Mr\":2, \"Rare\":3})\n","dataset[\"Title\"] = dataset[\"Title\"].astype(int)"],"execution_count":153,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":285},"id":"2OULYYAKFUYs","executionInfo":{"status":"ok","timestamp":1628849416316,"user_tz":-540,"elapsed":12,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"d251d13e-30bd-448f-9c52-f7d4cf364f4c"},"source":["g = sns.countplot(dataset['Title'])\n","g = g.set_xticklabels([\"Master\",\"Miss/Ms/Mme/Mlle/Mrs\",\"Mr\",\"Rare\"])\n"],"execution_count":154,"outputs":[{"output_type":"display_data","data":{"image/png":"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r7Su8ePHa+vWrYqKiqrwDro2l5WSkqKAgADt27dPBw4cUNeuXXXPPfcoKytLhw4d0iOPPKJHHnlEkvTdd99p2rRpOnbsmM6cOaNHHnnEM4IpLy/Xrl27FBcXp/z8fElSjx49lJOTowEDBuiDDz5Qly5d9OGHH9a4LZSXl+vFF1/UZ599pvLyckVHRys9PV3169eXVDkUe/furVWrVmnAgAE6ceKEPv/8c913332eEeby5cu1evVq1a9fX/v371dmZqbWrVtXabsJDg6usTcTNW0ru3fvVmlpqfLz8/XOO++oQYMGtbLeK0VUVJSCg4NVWFioTz/9VG+++abnzd/TTz+t22+/XdLZUUmPHj20ZcsWRUVFKT093et240sIjIvUvn17LV68WD/++KNWrFih3r17a9euXZKkG264QYsXL5bdbtfRo0d1//33q2PHjnK73VqwYIE2bNigoKAglZaWKigoSGlpaVq8eLGWLFni2VieffZZ3XbbbZo6dapcLpfGjh2rZcuW6fe//70k6cCBA1q8eLH8/av+U3rr73yvvfaahgwZoqSkJLndbpWUlEiSpk+frrVr1yo8PFzl5eWed7m7d+9W48aNK+w0EhMT9dBDD2nMmDFasWKF+vTp47nScG0v69x8f/3rX+V0OpWQkKCSkhK99dZbOnLkiBITE/XAAw8oMDBQY8eOVWZmpiIjI1VaWqq+ffuqXbt2ioyM1KZNm9S+fXvPu37p7I5zzJgxGjBggFauXKmJEycaBcb8+fN1/fXX67333pMkZWZmat68eRo1apRcLpc2b96siRMneh7fokULBQYGas+ePdq+fbu6dOkif3//Cockv/rqK61atUotW7bU8ePHq9xuaktN28qOHTu0fPlyrrRQjc8//1wNGzZUmzZt1KJFCyUlJclms+m7777ToEGD9Mknn3geW1pa6tlOZs+eXe1242sIjItks9nUvXt3rVmzRmvWrNGSJUs8L7Li4mJNmDBB+/fvl91u148//qi9e/fqpptuUsuWLTV+/Hh17NhRd999t6677roql79+/Xrt2LHDs7M8ffp0hcMjPXv2rDYsaurvfB06dNCrr76q77//XnfccYduvvlmSdJvfvMbpaSk6J577tHdd9+tFi1aSKr8blmS6tWrp3bt2ulvf/ubPv/8c02dOrXCTr42lyVJXbp0UUDA2avjtm7dWp06dZKfn58iIiIUHBysQ4cOye12a8+ePRo9erRnvjNnzui7775TZGRkles+tyP/xz/+oZMnTyo6Orra5/d869evV2lpqXJzcyWdHXG0adNGkrR9+3a1adOm0g6+d+/eWrFihb766qsqgykuLk4tW7aUJF1//fXG283PUdO2ctdddxEWVXjqqafkdrv1/fffa+bMmQoICNC///1vjRkzRoWFhfL399fRo0d15MgRNW7cWNLZv/s53rYbX0Ng1II+ffrowQcf1G233aaGDRt6pqenpyshIUGzZs2SzWZTt27dVFZWJrvdrnfffVdffPGFtmzZovvvv1/z58+vciNxu92aPXu2Z+f6v+rVq/ez+zvfoEGDlJCQoE2bNmny5Mm64447NGrUKM2aNUv/+te/tGXLFj388MNKT09Xp06dtG7dOs8htP9d18iRI9WnT59KQVaby5KkwMBAz892u73S706nUzabTQ0bNtSqVasqze9yubRp0yZNmDChUq13794aP368RowYUeXzVRW32620tDTPoYfzffTRR5WCSTo7kkpKSlJoaKiio6MrBcb5hyUuZLv5ubxtK754iMQXvPzyy4qKitLatWv1zDPPKC4uTqNHj1ZKSornSw4333yzysrKPPOc/7r1tt34GgKjFrRo0UKjRo1S27ZtK0wvKSlRs2bNZLPZtHHjRu3fv1/S2eHoyZMn1b59e7Vv317bt2/X7t271aZNG9WvX1+lpaWeF2dCQoLmzZun9PR02e12FRcX68SJE9UGyIX0d769e/eqdevWatmyperVq6eVK1fqp59+Un5+vtq2bau2bdvq+++/19dff602bdqovLxczZs3r7ScDh066LHHHlPXrl0rTK/NZV2I1q1bKygoSCtXrvS8q9uzZ48iIiK0e/duRUVF6dprr600X2JiooqKitSzZ0/jdSUkJGjBggW65ZZbPIeMCgsLFRkZqY8//lhDhw6tNE/9+vU1btw4NWrUqMble9tuaovJtoKqde/eXWvXrtXcuXNVUlLi2aaXLVvm9ZuP3rYbX0Ng1JJ+/fpVmjZmzBhNmjRJWVlZuummmzyHNkpLS/Xkk0/q9OnTcrvduuGGG3TvvfdKkgYPHqyHH35YQUFBWrhwoSZMmKDMzEz97ne/k81m0zXXXKMJEyZcUGBU19/5Fi5cqK1bt+qaa65RQECAJk6cKJfLpZSUFJWUlMhms8nhcGjMmDFau3atEhISqlyOzWbT4MGDK02vzWVdCH9/f82ZM0fTpk3T66+/LpfLpbCwML300kvVvuuXzu7Ihw0bdkHrGjZsmGbNmqUHHnhANptNNpvNM0Jp2LBhtYdzevToYbR8b9tNbappW0H1xowZo/vvv1/PPfecnnjiCTVo0EB33nmnQkJCqp2nuu3GFwODiw/igg0ZMkSjRo2q8gYrdbmsC9WjRw8tXLhQYWFhl3Q98+bNk7+//0WHH1DXCAwAgBFO3AMAGCEwAABGCAwAgBECAwBghMAALrH77rtPW7durbY+cODAK/4qp7gycB4GcJFuueUWz8+nTp1SQECA7Ha7JGnSpEkVrkiblZWl/fv3a8aMGZb3CVwsAgO4SF9++aXn54SEBE2ZMkW//e1v67Aj4NLgkBRwiZ27Rtcnn3yiuXPnau3atbrlllvUq1evKh//3nvvqXv37rrttts0ZMgQ/fDDDxZ3DFSNwAAsctddd+mxxx5T9+7d9eWXX2r16tWVHvPRRx9p7ty5mjVrljZv3qxbb71VY8aMqYNugcoIDMCHLFmyRMOGDVNkZKT8/f01fPhwff3114wy4BP4DAPwIfn5+Zo2bVqF+3q73W4VFhaqWbNmddgZQGAAlrLZbF7rDodDw4cPr/bzDaAucUgKsFBYWJh++OEHuVyuKuv9+/fXvHnztHv3bkln76mydu1aK1sEqkVgABZKTEyUdPbmUH369KlU79q1q4YOHarRo0crLi5OSUlJFe4FDdQlLm8OADDCCAMAYITAAAAYITAAAEYIDACAEQIDAGCEwAAAGCEwAABGCAwAgBECAwBg5P8Bbdqn6c3GXGEAAAAASUVORK5CYII=\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"niqLprhZFUbG","executionInfo":{"status":"ok","timestamp":1628849416316,"user_tz":-540,"elapsed":10,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}}},"source":["# freq = dataset.groupby(['Title']).count()\n","# freq"],"execution_count":155,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":418},"id":"skVIAu9WVWUQ","executionInfo":{"status":"ok","timestamp":1628849417215,"user_tz":-540,"elapsed":909,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"38af388d-8e24-41c1-b39a-28daba06c12d"},"source":["g  = sns.factorplot(x = 'Title', y= 'Survived', data=dataset, kind = 'bar')\n","# g = g.set_xticklabels(['Master', 'Miss-Mrs','Mr', 'Rare'])"],"execution_count":156,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/seaborn/categorical.py:3714: UserWarning: The `factorplot` function has been renamed to `catplot`. The original name will be removed in a future release. Please update your code. Note that the default `kind` in `factorplot` (`'point'`) has changed `'strip'` in `catplot`.\n","  warnings.warn(msg)\n"],"name":"stderr"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 360x360 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"0DToDALm8COm","executionInfo":{"status":"ok","timestamp":1628849417216,"user_tz":-540,"elapsed":11,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}}},"source":[""],"execution_count":156,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":418},"id":"OET8pU4GVWRy","executionInfo":{"status":"ok","timestamp":1628849417799,"user_tz":-540,"elapsed":593,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"fdc4b699-588c-4977-9bcf-6f154a6243ea"},"source":[" g = sns.factorplot(x = 'Title', y= 'Survived', data = dataset, kind = 'bar')\n"," g = g.set_xticklabels(['Master', 'Miss-Mrs','Mr', 'Rare'])\n"," g = g.set_ylabels('Survival Probability')"],"execution_count":157,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/seaborn/categorical.py:3714: UserWarning: The `factorplot` function has been renamed to `catplot`. The original name will be removed in a future release. Please update your code. Note that the default `kind` in `factorplot` (`'point'`) has changed `'strip'` in `catplot`.\n","  warnings.warn(msg)\n"],"name":"stderr"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 360x360 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"aQlGhZ_HVWPC","executionInfo":{"status":"ok","timestamp":1628849417799,"user_tz":-540,"elapsed":10,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}}},"source":["# Drop Name variable\n","dataset.drop(labels=['Name'],axis = 1,inplace =True)"],"execution_count":158,"outputs":[]},{"cell_type":"code","metadata":{"id":"MTCaOmBwVWML","executionInfo":{"status":"ok","timestamp":1628849417800,"user_tz":-540,"elapsed":10,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}}},"source":["dataset['Fsize'] = dataset['SibSp']+dataset['Parch']+1"],"execution_count":159,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":418},"id":"VlHZwKyYVWJ6","executionInfo":{"status":"ok","timestamp":1628849418743,"user_tz":-540,"elapsed":953,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"cdb5a376-8d7a-4cf0-f491-b7805e3d4d11"},"source":["g= sns.factorplot(x= 'Fsize', y= 'Survived', data = dataset)\n","g = g.set_ylabels('Survival Probability')\n","\n","# family size seems to play an important role, survival probability is worst for large families\n"],"execution_count":160,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/seaborn/categorical.py:3714: UserWarning: The `factorplot` function has been renamed to `catplot`. The original name will be removed in a future release. Please update your code. Note that the default `kind` in `factorplot` (`'point'`) has changed `'strip'` in `catplot`.\n","  warnings.warn(msg)\n"],"name":"stderr"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 360x360 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":419},"id":"21tNTfb9VWG4","executionInfo":{"status":"ok","timestamp":1628849418744,"user_tz":-540,"elapsed":9,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"12ce8403-73fe-4af2-da6a-c7709a341ef9"},"source":["dataset"],"execution_count":161,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","      <th>Title</th>\n","      <th>Fsize</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>A/5 21171</td>\n","      <td>1.981001</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>PC 17599</td>\n","      <td>4.266662</td>\n","      <td>C85</td>\n","      <td>C</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>STON/O2. 3101282</td>\n","      <td>2.070022</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>113803</td>\n","      <td>3.972177</td>\n","      <td>C123</td>\n","      <td>S</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0.0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>373450</td>\n","      <td>2.085672</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1294</th>\n","      <td>1305</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>25.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>A.5. 3236</td>\n","      <td>2.085672</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1295</th>\n","      <td>1306</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>39.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>PC 17758</td>\n","      <td>4.690430</td>\n","      <td>C105</td>\n","      <td>C</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1296</th>\n","      <td>1307</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>38.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>SOTON/O.Q. 3101262</td>\n","      <td>1.981001</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1297</th>\n","      <td>1308</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>25.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>359309</td>\n","      <td>2.085672</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1298</th>\n","      <td>1309</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>16.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2668</td>\n","      <td>3.107198</td>\n","      <td>NaN</td>\n","      <td>C</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1299 rows × 13 columns</p>\n","</div>"],"text/plain":["      PassengerId  Survived  Pclass  Sex  ...  Cabin  Embarked  Title Fsize\n","0               1       0.0       3    0  ...    NaN         S      2     2\n","1               2       1.0       1    1  ...    C85         C      1     2\n","2               3       1.0       3    1  ...    NaN         S      1     1\n","3               4       1.0       1    1  ...   C123         S      1     2\n","4               5       0.0       3    0  ...    NaN         S      2     1\n","...           ...       ...     ...  ...  ...    ...       ...    ...   ...\n","1294         1305       NaN       3    0  ...    NaN         S      2     1\n","1295         1306       NaN       1    1  ...   C105         C      3     1\n","1296         1307       NaN       3    0  ...    NaN         S      2     1\n","1297         1308       NaN       3    0  ...    NaN         S      2     1\n","1298         1309       NaN       3    0  ...    NaN         C      0     3\n","\n","[1299 rows x 13 columns]"]},"metadata":{"tags":[]},"execution_count":161}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":272},"id":"hakE7a66VWEJ","executionInfo":{"status":"ok","timestamp":1628849419311,"user_tz":-540,"elapsed":573,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"1095b7c6-194e-4fbd-d618-5f9aadf4bf5c"},"source":["g = sns.heatmap(dataset[['Survived', 'SibSp','Parch', 'Age','Fare','Fsize']].corr(),annot=True,fmt= '.2f',cmap = 'coolwarm')\n"],"execution_count":162,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 2 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"fxPdY5Io-GS9","executionInfo":{"status":"ok","timestamp":1628849419311,"user_tz":-540,"elapsed":7,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}}},"source":["# Create new feature of family size\n","\n","dataset['Single'] = dataset['Fsize'].map(lambda s : 1 if s==1 else 0)\n","dataset['SmallF'] = dataset['Fsize'].map(lambda s: 1 if s ==2 else 0)\n","dataset['MedF']= dataset['Fsize'].map(lambda s : 1 if 3<=s<=4 else 0)\n","dataset['LargeF'] = dataset['Fsize'].map(lambda s : 1 if s>=5 else 0)"],"execution_count":163,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"c-3UKcCf-GQj","executionInfo":{"status":"ok","timestamp":1628849421285,"user_tz":-540,"elapsed":1979,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"d7d2b422-124c-4f26-d96d-d5e4302f2e18"},"source":["g = sns.factorplot(x='Single', y='Survived', data=dataset, kind = 'bar')\n","g = g.set_ylabels('Survival Probability')\n","g = sns.factorplot(x= 'SmallF', y= 'Survived',data = dataset, kind ='bar')\n","g = g.set_ylabels('Survival Probability')\n","g = sns.factorplot(x='MedF', y='Survived', data=dataset, kind = 'bar')\n","g = g.set_ylabels('Survival Probability')\n","g = sns.factorplot(x= 'LargeF', y= 'Survived',data = dataset, kind ='bar')\n","g = g.set_ylabels('Survival Probability')\n","\n"],"execution_count":164,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/seaborn/categorical.py:3714: UserWarning: The `factorplot` function has been renamed to `catplot`. The original name will be removed in a future release. Please update your code. Note that the default `kind` in `factorplot` (`'point'`) has changed `'strip'` in `catplot`.\n","  warnings.warn(msg)\n","/usr/local/lib/python3.7/dist-packages/seaborn/categorical.py:3714: UserWarning: The `factorplot` function has been renamed to `catplot`. The original name will be removed in a future release. Please update your code. Note that the default `kind` in `factorplot` (`'point'`) has changed `'strip'` in `catplot`.\n","  warnings.warn(msg)\n","/usr/local/lib/python3.7/dist-packages/seaborn/categorical.py:3714: UserWarning: The `factorplot` function has been renamed to `catplot`. The original name will be removed in a future release. Please update your code. Note that the default `kind` in `factorplot` (`'point'`) has changed `'strip'` in `catplot`.\n","  warnings.warn(msg)\n","/usr/local/lib/python3.7/dist-packages/seaborn/categorical.py:3714: UserWarning: The `factorplot` function has been renamed to `catplot`. The original name will be removed in a future release. Please update your code. Note that the default `kind` in `factorplot` (`'point'`) has changed `'strip'` in `catplot`.\n","  warnings.warn(msg)\n"],"name":"stderr"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 360x360 with 1 Axes>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAW0AAAFtCAYAAADMATsiAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAd/UlEQVR4nO3de3BU9d3H8U+ykBAHERNzWS5y1bAtiGCKoiBgYMJlIYBgMCC1aDpeaFq5SKqPuYAiUUtFCp2KCkUQNUqDLkGtiApWQBS5NKBIkwKyJJIYERCEJc8f6JY1JByEPeGXvF8zDrubkz3fHfHtmbO7vxNSWVlZKQCAEUJrewAAgHVEGwAMQrQBwCBEGwAMQrQBwCB1JtrHjx/Xnj17dPz48doeBQCCps5Ee9++fUpMTNS+fftqexQACJo6E20AqA+INgAYhGgDgEGINgAYhGgDgEGINgAYhGgDgEGINgAYhGgDgEGINgAYhGgDgEGINgAYhGgDgEGINoCgWbt2rSZMmKC1a9fW9ih1RoPaHgBA3bVgwQLt2LFDhw8f1nXXXVfb49QJHGkDCJrDhw8H/IlzR7QBwCBEGwAMQrQBwCBEGwAMQrQBwCBEGwAMQrQBwCBEGwAMQrQBwCBEGwAMYlu0i4qKlJKSoqSkJKWkpKi4uPi02xUUFGjw4MFyu90aPHiw9u/fb9eIAHDBs23BqKysLKWmpio5OVnLli1TZmamFi5cGLDNli1b9Je//EV///vfFR0drW+//VZhYWF2jQgAFzxbjrTLyspUWFgot9stSXK73SosLFR5eXnAdgsWLNC4ceMUHR0tSbr44osVHh5ux4gAYARbou31ehUbGyuHwyFJcjgciomJkdfrDdhu586d2r17t0aPHq1hw4Zp7ty5qqystGNEADDCBbWets/n02effab58+fr+++/15133qlmzZpp6NChtT0aAFwQbDnSdjqdKikpkc/nk3QyzqWlpXI6nQHbNWvWTP3791dYWJgaN26sxMREbd682Y4RAcAItkQ7KipKLpdLHo9HkuTxeORyuRQZGRmwndvt1po1a1RZWaljx45p7dq16tChgx0jAoARbPvIX3Z2thYtWqSkpCQtWrRIOTk5kqS0tDRt2bJFkjRo0CBFRUVp4MCBGjp0qNq3b68RI0bYNSIAXPBCKuvIO3179uxRYmKiVq5cqRYtWtT2OAAkjR07Vl9++aWaN29e5SO++Hn4RiQAGIRoA4BBiDYAGIRoA4BBiDYAGIRoA4BBiDYAGIRoA4BBiDYAGIRoA4BBiDYAGIRoA4BBiDYAGIRoA4BBiDYAGIRoA4BBiDYAGIRoAzY6cexobY8AmwTr33WDoDwrgNMKbRiu4sw2tT2GbY6XtZAUpuNlRfXqdUtS66lFQXlejrQBwCBEGwAMQrQBwCBEGwAMQrQBwCBEGwAMQrQBwCBEGwAMQrQBwCBEGwAMQrQBwCBEGwAMQrQBwCBEGwAMQrQBwCBEGwAMQrQBwCBEGwAMQrQBwCC2XSOyqKhIGRkZqqioUNOmTZWbm6vWrVsHbDN79my98MILiomJkSR17dpVWVlZdo0IABc826KdlZWl1NRUJScna9myZcrMzNTChQurbDd06FBNmTLFrrEAwCi2nB4pKytTYWGh3G63JMntdquwsFDl5eV27B4A6gxbou31ehUbGyuHwyFJcjgciomJkdfrrbLt8uXLNXjwYI0bN04bN260YzwAMIZtp0esGDVqlO666y41bNhQH3zwge655x4VFBTo0ksvre3RAOCCYMuRttPpVElJiXw+nyTJ5/OptLRUTqczYLvo6Gg1bNhQknTDDTfI6XRqx44ddowIAEawJdpRUVFyuVzyeDySJI/HI5fLpcjIyIDtSkpK/Le3bdumL7/8Um3atLFjRAAwgm2nR7Kzs5WRkaG5c+eqSZMmys3NlSSlpaUpPT1dnTp10syZM/Xvf/9boaGhatiwoR577DFFR0fbNSIAXPBsi3a7du2Ul5dX5fF58+b5b/8YcgDA6fGNSAAwCNEGAIMQbQAwCNEGAIMQbQAwCNEGAIMQbQAwCNEGAIMQbQBB08hRGfAnzh3RBhA0yZeXK77Jd0q+nLXzz5cLamlWAHVL58jv1Dnyu9oeo07hSBsADEK0AcAgRBsADEK0AcAgRBsADEK0AcAgRBsADGIp2tOnT9e2bduCPQsA4AwsfbnmxIkTuuOOOxQZGakhQ4ZoyJAhiouLC/ZsAICfsHSk/X//939avXq1Jk6cqO3bt2vAgAG6/fbblZ+fr0OHDgV7RgDADyyf03Y4HOrTp49mzpypl19+WeXl5crIyFCPHj304IMPqqSkJJhzAgB0FtE+ePCg8vLydNttt2nMmDHq3LmzFi9erIKCAl100UW68847gzknAEAWz2mnp6dr9erV+tWvfqVbb71Vffv2VVhYmP/nf/zjH3XNNdcEbUgAwEmWot25c2c99NBDio6OPu3PQ0ND9a9//eu8DgYAqMrS6ZENGzacNtjjx4/3346IiDh/UwEATstStNetW3fax9evX39ehwEA1KzG0yOzZs2SJB07dsx/+0e7d+9Ws2bNgjcZAKCKGqO9b98+SVJlZaX/9o+cTqd+97vfBW8yAEAVNUb70UcflSR16dJFt9xyiy0DAQCqV2209+zZoxYtWkiSunfvrt27d592u5YtWwZnMgBAFdVGe/Dgwdq4caMkqV+/fgoJCVFlZWXANiEhISwkBQA2qjbaPwZbkrZv327LMACAmrGeNgAYpNoj7dTUVIWEhJzxCRYvXnxeBwIAVK/aaI8cOdLOOQAAFlQb7WHDhtk5BwDAgmqjnZ+fr6FDh0qSXnnllWqfYMSIEed/KgDAaVUb7eXLl/ujvWzZstNuExISQrQBwEbVRnvevHn+288///w576ioqEgZGRmqqKhQ06ZNlZubq9atW5922//85z8aNmyYUlNTNWXKlHPeNwDUFZY/8nfgwAG99tpreuaZZ/Taa6/pwIEDZ7WjrKwspaam6s0331RqaqoyMzNPu53P51NWVpb69u17Vs8PAPWBpWh/+OGHuummm/T8889ry5YtWrRokW666SZ9+OGHlnZSVlamwsJCud1uSZLb7VZhYaHKy8urbPv000+rd+/e1R6FA0B9ZunKNdOmTdPUqVM1cOBA/2MrVqxQTk6O3njjjTP+vtfrVWxsrBwOh6STFwmOiYmR1+tVZGSkf7vt27drzZo1WrhwoebOnXu2rwUA6jxLR9qlpaVKSkoKeKxfv37av3//eRvk2LFjeuihh5STk+OPOwAgkKUj7eTkZC1evFhjx471P7ZkyRL/p0vOxOl0qqSkRD6fTw6HQz6fT6WlpXI6nf5tvvrqK+3atUu//e1vJZ08h15ZWamDBw9q2rRpZ/OaAKDOsvQ19hMnTujFF1/UM888o9jYWJWUlKisrEydO3e2tJOoqCi5XC55PB4lJyfL4/HI5XIFnBpp1qxZwGXNZs+ercOHD/PpEQA4heWvsZ/rRRCys7OVkZGhuXPnqkmTJsrNzZUkpaWlKT09XZ06dTqn5weA+iCk8qeLZBtqz549SkxM1MqVK/0XbwAuRMWZbWp7BNig9dSioDyvpXPakrR//35t3rxZX3/9dcDFEPhGJADYx1K03377bU2ePFmtWrXSF198ofbt22vHjh3q2rUr0QYAG1n6yN+TTz6p6dOnKz8/XxEREcrPz9fUqVPVsWPHYM+HIFq7dq0mTJigtWvX1vYoACyyFO29e/dqwIABAY8NGzZM+fn5QRkK9liwYIE2bdqkBQsW1PYoACyyFO2oqCj/F2maN2+ujRs3ateuXTpx4kRQh0NwHT58OOBPABc+S9EeOXKkPv74Y0nS7bffrrFjxyo5OVm33nprUIcDAASy9Ebkj99SlKShQ4eqW7du+u6779SuXbugDQYAqMryR/58Pp8+/fRTlZaWKiYmRldffXUw5wIAnIalaG/fvl333nuvjh49qri4OO3bt0/h4eGaM2eOOnToEOwZAQA/sBTtBx54QKNHj9ZvfvMbhYSEqLKyUgsWLNADDzygpUuXBntGAMAPLL0RWVxcrF//+tf+BaRCQkI0duxYFRcXB3M2AMBPWIp2r1699M477wQ8tmrVKvXu3TsYMwEAqlHt6ZHJkyf7j6x9Pp/uu+8+dezY0X9Oe+vWrUpMTLRtUABADdFu1apVwP0rr7zSf7t9+/bq0aNH8KYCAJxWtdEeP368nXMAACyw/DntdevWKT8/3/857eTkZF133XXBnA0A8BOW3ojMy8vTH/7wB0VHR6tfv36KiYnRxIkT9fLLLwd7PgDAKSwdaT/zzDOaP39+wBdpBgwYoPT09HO+DBkAwDpLR9oVFRVV1hlp27atvvnmm6AMVRuOfs+KhfUF/65hMktH2l27dtWMGTM0adIkRURE6PDhw5o5c6a6dOkS7PlsEx4WqnZDi2t7DFs1P3hcDSUV7z1er177zvzWtT0C8LNZinZOTo4mTJighIQEXXLJJfrmm2/UpUsX/elPfwr2fACAU5wx2j6fT++//76effZZff311/5Pj8TFxdkxHwDgFGc8p+1wODRjxgyFh4crLi5OV111FcEGgFpi6Y3IPn36VFl7BABgP0vntI8ePar09HR16dJFcXFx/jVJJOmxxx4L2nAAgECWon3llVcGrD0CAKgdZ4z2t99+qz59+qhVq1Zq3LixHTMBAKpR4zntd999Vz179tTNN9+sXr16ae3atXbNBQA4jRqjPWvWLE2aNEkbN25Uenq6nnzySbvmAgCcRo3R3r17t8aMGaOIiAiNHj1a//3vf+2aCwBwGjVG+8SJ/63R0KBBA/l8vqAPBACoXo1vRB45ckSjR4/23z906FDAfUlavHhxcCYDAFRRY7QfeeSRgPsjRowI6jAAgJrVGO1hw4bZNQcAwAJLX2MHAFwYiHY9diKkUcCfAC58RLseqwhP1neOeFWEJ9f2KAAssnw1dtQ93zXorO8adK7tMQCchWqjPWvWLEtP8Pvf/97SdkVFRcrIyFBFRYWaNm2q3NxctW7dOmCbV199VQsWLFBoaKhOnDihkSNHauzYsZaeHwDqg2qjvW/fvvO6o6ysLKWmpio5OVnLli1TZmamFi5cGLBNUlKShg8frpCQEB08eFCDBw9Wt27dAq4CDwD1WbXRfvTRR8/bTsrKylRYWKj58+dLktxut6ZNm6by8nJFRkb6tzt1FcEjR47o2LFjAWt3A0B9d1bntA8ePKivv/464LGWLVue8fe8Xq9iY2PlcDgknbyEWUxMjLxeb0C0JWnlypWaOXOmdu3apYkTJyo+Pv5sRgSAOs1StL/44gtNmjRJ27dvV0hIiCorK/1HwNu2bTuvAyUmJioxMVF79+7VvffeqxtvvFFt27Y9r/sAAFNZ+shfTk6Orr32Wq1fv16NGzfWRx99pJSUFM2YMcPSTpxOp0pKSvwLTvl8PpWWlsrpdFb7O82aNVOnTp307rvvWtoHANQHlqK9fft2TZo0SU2aNFFlZaUuvvhi3X///ZY/YRIVFSWXyyWPxyNJ8ng8crlcVU6N7Ny503+7vLxc69at4zJnAHAKS6dHwsPDdfz4cTVs2FCXXnqp9u7dqyZNmqiiosLyjrKzs5WRkaG5c+eqSZMmys3NlSSlpaUpPT1dnTp10ksvvaQPPvhADRo0UGVlpcaMGaMePXr8vFcGAHWQpWhfc801WrFihYYPH66kpCSlpaUpLCxM1113neUdtWvXTnl5eVUenzdvnv/2Aw88YPn5AKA+shTtU0+DTJgwQVdccYUOHTqkoUOHBm0wAEBVlqK9bds2uVwuSVJoaKiSk1mrAgBqg6Vojxs3TpGRkRo0aJAGDx5s6bPZAIDzz1K016xZo9WrV8vj8Sg5OVlXXHGF3G63Bg4cqKioqGDPCAD4gaVoOxwO9e7dW71799aRI0e0cuVKLVmyRLm5udq6dWuwZwQA/OCs1tM+evSoVq1apYKCAm3dulUJCQnBmgsAcBqWjrTfe+89vf7663rnnXfUvn17DRw4UNnZ2YqOjg72fACAU1iKdm5urgYNGqT8/HxdfvnlwZ4JAFANS9EuKCgI9hwAAAuqjfZf//pX3X333ZJqvoqN1SvXAADOnaUr15zvq9gAAH6eaqOdk5Pjv30+r2IDAPj5LH3k75577tGKFSt09OjRYM8DAKiBpWh369ZNzz77rK6//npNmTJFq1ev1okTJ4I9GwDgJyxF+/bbb9crr7yiV199VS1bttT06dPVs2dPPfzww8GeDwBwirP6RmTr1q01fvx4/fnPf1Z8fLwWL14crLkAAKdh+Wrsu3btksfj0fLly1VeXq7+/fvrnnvuCeZsAICfsBTtm2++WcXFxUpMTNT999+vG264QQ0aWO49AOA8OWN5Kysr1b9/f916661q3LixHTMBAKpxxnPaISEhmjNnji666CI75gEA1MDSG5Eul0tFRUXBngUAcAaWTkx369ZNaWlpGjZsmOLi4hQSEuL/2YgRI4I2HAAgkKVof/LJJ2revLnWr18f8HhISAjRBgAbWYr2888/H+w5AAAWWIp2TV9ZDw09q+/nAADOgaVo/+IXvwg4j32qbdu2ndeBAADVsxTtlStXBtz/6quv9PTTT6tPnz5BGQoAcHqWot28efMq93NzczVixAiNHDkyKIMBAKr62SekDx48qPLy8vM5CwDgDCwdaU+ePDngnPaRI0f00UcfaciQIUEbDABQlaVot2rVKuB+RESERo0apeuvvz4oQwEATs9StMePHx/sOQAAFtR4Tnvr1q36/PPP/ffLy8s1ceJEDRkyRJmZmTp06FDQBwQA/E+N0Z4+fbr279/vv//ggw+quLhYKSkp2rFjhx5//PGgDwgA+J8ao71z504lJCRIkg4cOKDVq1friSee0OjRozVz5kytWrXKliEBACfVGG2fz6eGDRtKkj799FNddtllatOmjSTJ6XTqwIEDwZ8QAOBXY7Tbt2+vFStWSJIKCgrUvXt3/89KSkp08cUXB3c6AECAGj89MmnSJN19993Kzs5WaGioXnjhBf/PCgoK1LVr16APCAD4nxqjnZCQoFWrVqm4uFitW7cOuEZkr169NHDgQMs7KioqUkZGhioqKtS0aVPl5uaqdevWAdvMmTNH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UXc0qO0BgGA7ePCg7rrrLmVnZ2vAgAE6duyYNmzYoLCwMFvnuPrqq7VkyRJb94m6hyNt1HlFRUWSTi5B63A41KhRI/Xo0UMdOnTQ0qVLNWrUKE2fPl0JCQlKTEzUJ598oqVLl6pXr17q3r27/vGPf/if691339XQoUPVtWtX9erVS7Nnz66tl4V6imijzmvTpo0cDoemTJmi9957T998803Azzdv3qz4+HitW7dObrdbEyZM0JYtW/TPf/5Tjz/+uKZOnapDhw5JkiIiIpSbm6sNGzbob3/7m5YsWaK33367Nl4W6imijTqvcePGeuGFFxQSEqKHHnpI3bt311133aX9+/dLklq0aKGbb75ZDodDAwcOlNfr1b333quwsDD16NFDYWFh2rVrlyTp2muvVXx8vEJDQ9WhQwcNGjRI69evtzTHpk2blJCQ4P/n008/DdprRt3FOW3UC+3atdOMGTMknVwsa/LkyZo+fbp69OihqKgo/3aNGjWSJF122WX+x8LDw/1H2ps2bdITTzyhHTt26NixY/r+++/Vv39/SzN07tyZc9o4Zxxpo95p166dhg8frh07dpz1706cOFGJiYl677339PHHH2vUqFFizTXYiWijztu5c6eee+457du3T9LJy615PB517tz5rJ/r0KFDuuSSSxQeHq7Nmzf71yQH7EK0Uec1btxYmzZt0siRI3X11Vfrlltu0ZVXXqmMjIyzfq6srCw99dRT6tKli+bMmaMBAwYEYWKgeqynDQAG4UgbAAxCtAHAIEQbAAxCtAHAIEQbAAxCtAHAIEQbAAxCtAHAIEQbAAzy/3p1Ca+8b49xAAAAAElFTkSuQmCC\n","text/plain":["<Figure size 360x360 with 1 Axes>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 360x360 with 1 Axes>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 360x360 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"2e6tAQ0y-GN3","executionInfo":{"status":"ok","timestamp":1628849421286,"user_tz":-540,"elapsed":15,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}}},"source":["# Factorplots of family size categories show that Small and Medium families have more chance to survive than single passneger and large families\n"],"execution_count":165,"outputs":[]},{"cell_type":"code","metadata":{"id":"1Ql5EvcG-GLn","executionInfo":{"status":"ok","timestamp":1628849421286,"user_tz":-540,"elapsed":13,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}}},"source":["# Convert to indicator values Title and Embarked\n","dataset = pd.get_dummies(dataset, columns=['Title']) # 수치 데이터를 더미로 가변수화 시킨다.\n","dataset = pd.get_dummies(dataset, columns= ['Embarked'],prefix = 'Em')"],"execution_count":166,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"Ggz9H8l1-GIj","executionInfo":{"status":"ok","timestamp":1628849421287,"user_tz":-540,"elapsed":14,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"dab93c27-c0ba-4756-c93a-1c8b4fd9fc5a"},"source":["dataset.head()"],"execution_count":167,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Fsize</th>\n","      <th>Single</th>\n","      <th>SmallF</th>\n","      <th>MedF</th>\n","      <th>LargeF</th>\n","      <th>Title_0</th>\n","      <th>Title_1</th>\n","      <th>Title_2</th>\n","      <th>Title_3</th>\n","      <th>Em_C</th>\n","      <th>Em_Q</th>\n","      <th>Em_S</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>A/5 21171</td>\n","      <td>1.981001</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>PC 17599</td>\n","      <td>4.266662</td>\n","      <td>C85</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>STON/O2. 3101282</td>\n","      <td>2.070022</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>113803</td>\n","      <td>3.972177</td>\n","      <td>C123</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0.0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>373450</td>\n","      <td>2.085672</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   PassengerId  Survived  Pclass  Sex   Age  ...  Title_2  Title_3 Em_C  Em_Q Em_S\n","0            1       0.0       3    0  22.0  ...        1        0    0     0    1\n","1            2       1.0       1    1  38.0  ...        0        0    1     0    0\n","2            3       1.0       3    1  26.0  ...        0        0    0     0    1\n","3            4       1.0       1    1  35.0  ...        0        0    0     0    1\n","4            5       0.0       3    0  35.0  ...        1        0    0     0    1\n","\n","[5 rows x 22 columns]"]},"metadata":{"tags":[]},"execution_count":167}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qChZFNJ4-GGI","executionInfo":{"status":"ok","timestamp":1628849421287,"user_tz":-540,"elapsed":12,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"972943c6-e7cc-40b4-c9c3-6fff8d1f95ca"},"source":["dataset['Cabin'].head()"],"execution_count":168,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0     NaN\n","1     C85\n","2     NaN\n","3    C123\n","4     NaN\n","Name: Cabin, dtype: object"]},"metadata":{"tags":[]},"execution_count":168}]},{"cell_type":"code","metadata":{"id":"t2kEWMEHDvp5","executionInfo":{"status":"ok","timestamp":1628849421288,"user_tz":-540,"elapsed":8,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}}},"source":["# dataset['Cabin'].describe()\n"],"execution_count":169,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oKhvoxkuGBYe","executionInfo":{"status":"ok","timestamp":1628849421898,"user_tz":-540,"elapsed":22,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"3b66f9ec-3ba3-42fa-e869-471ba9dca64b"},"source":["dataset['Cabin'].isnull().sum()\n","# cabin 특징은 292개의 값을 가지고 1007개가 비어있다.\n","# 객실이 없는 승객은 객실 번호 대신 누락된 값이 표시된다고 가정했습니다."],"execution_count":170,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1007"]},"metadata":{"tags":[]},"execution_count":170}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Izo-qAxgDvua","executionInfo":{"status":"ok","timestamp":1628849421899,"user_tz":-540,"elapsed":21,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"831328b4-db65-4a2f-affe-1d060b5bd2fa"},"source":["dataset['Cabin'][dataset['Cabin'].notnull()].head()"],"execution_count":171,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1      C85\n","3     C123\n","6      E46\n","10      G6\n","11    C103\n","Name: Cabin, dtype: object"]},"metadata":{"tags":[]},"execution_count":171}]},{"cell_type":"code","metadata":{"id":"wgNaRKtVDvzC","executionInfo":{"status":"ok","timestamp":1628849421900,"user_tz":-540,"elapsed":17,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}}},"source":["# Replace the Cabin number by the type of cabin 'X' if not\n","dataset[\"Cabin\"] = pd.Series([i[0] if not pd.isnull(i) else 'X' for i in dataset['Cabin'] ])\n","# 만약 null이 아니면 , i[0]이다. 그리고 null이면 X이다. 이는 dataset['Cabin']에서 계속해서 돌아간다. \n"],"execution_count":172,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":285},"id":"RB70ixCuDv3S","executionInfo":{"status":"ok","timestamp":1628849421900,"user_tz":-540,"elapsed":17,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"88a83066-2449-43c1-c24c-dae15eb77b08"},"source":["g = sns.countplot(dataset[\"Cabin\"],order=['X','A','B','C','D','E','F','G','T'])"],"execution_count":173,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":669},"id":"ksJOZVf-Dv7K","executionInfo":{"status":"ok","timestamp":1628849421901,"user_tz":-540,"elapsed":16,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"f2e3b608-aae4-4c23-ec06-b219ecc1b0d7"},"source":["dataset.tail(20)"],"execution_count":174,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Fsize</th>\n","      <th>Single</th>\n","      <th>SmallF</th>\n","      <th>MedF</th>\n","      <th>LargeF</th>\n","      <th>Title_0</th>\n","      <th>Title_1</th>\n","      <th>Title_2</th>\n","      <th>Title_3</th>\n","      <th>Em_C</th>\n","      <th>Em_Q</th>\n","      <th>Em_S</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1279</th>\n","      <td>1290</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>22.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>347065</td>\n","      <td>2.050913</td>\n","      <td>X</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1280</th>\n","      <td>1291</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>31.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>21332</td>\n","      <td>2.045536</td>\n","      <td>X</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1281</th>\n","      <td>1292</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>30.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>36928</td>\n","      <td>5.105137</td>\n","      <td>C</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1282</th>\n","      <td>1293</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>28664</td>\n","      <td>3.044522</td>\n","      <td>X</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1283</th>\n","      <td>1294</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>22.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>112378</td>\n","      <td>4.084294</td>\n","      <td>X</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1284</th>\n","      <td>1295</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>17.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>113059</td>\n","      <td>3.852273</td>\n","      <td>X</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1285</th>\n","      <td>1296</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>43.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>17765</td>\n","      <td>3.322183</td>\n","      <td>D</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1286</th>\n","      <td>1297</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>20.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>SC/PARIS 2166</td>\n","      <td>2.629187</td>\n","      <td>D</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1287</th>\n","      <td>1298</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>23.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>28666</td>\n","      <td>2.351375</td>\n","      <td>X</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1288</th>\n","      <td>1299</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>50.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>113503</td>\n","      <td>5.354225</td>\n","      <td>C</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1289</th>\n","      <td>1300</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>25.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>334915</td>\n","      <td>2.043918</td>\n","      <td>X</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1290</th>\n","      <td>1301</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>SOTON/O.Q. 3101315</td>\n","      <td>2.622855</td>\n","      <td>X</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1291</th>\n","      <td>1302</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>25.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>365237</td>\n","      <td>2.047693</td>\n","      <td>X</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1292</th>\n","      <td>1303</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>37.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>19928</td>\n","      <td>4.499810</td>\n","      <td>C</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1293</th>\n","      <td>1304</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>28.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>347086</td>\n","      <td>2.050913</td>\n","      <td>X</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1294</th>\n","      <td>1305</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>25.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>A.5. 3236</td>\n","      <td>2.085672</td>\n","      <td>X</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1295</th>\n","      <td>1306</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>39.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>PC 17758</td>\n","      <td>4.690430</td>\n","      <td>C</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1296</th>\n","      <td>1307</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>38.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>SOTON/O.Q. 3101262</td>\n","      <td>1.981001</td>\n","      <td>X</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1297</th>\n","      <td>1308</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>25.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>359309</td>\n","      <td>2.085672</td>\n","      <td>X</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1298</th>\n","      <td>1309</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>16.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2668</td>\n","      <td>3.107198</td>\n","      <td>X</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      PassengerId  Survived  Pclass  Sex  ...  Title_3  Em_C  Em_Q Em_S\n","1279         1290       NaN       3    0  ...        0     0     0    1\n","1280         1291       NaN       3    0  ...        0     0     1    0\n","1281         1292       NaN       1    1  ...        0     0     0    1\n","1282         1293       NaN       2    0  ...        0     0     0    1\n","1283         1294       NaN       1    1  ...        0     1     0    0\n","1284         1295       NaN       1    0  ...        0     0     0    1\n","1285         1296       NaN       1    0  ...        0     1     0    0\n","1286         1297       NaN       2    0  ...        0     1     0    0\n","1287         1298       NaN       2    0  ...        0     0     0    1\n","1288         1299       NaN       1    0  ...        0     1     0    0\n","1289         1300       NaN       3    1  ...        0     0     1    0\n","1290         1301       NaN       3    1  ...        0     0     0    1\n","1291         1302       NaN       3    1  ...        0     0     1    0\n","1292         1303       NaN       1    1  ...        0     0     1    0\n","1293         1304       NaN       3    1  ...        0     0     0    1\n","1294         1305       NaN       3    0  ...        0     0     0    1\n","1295         1306       NaN       1    1  ...        1     1     0    0\n","1296         1307       NaN       3    0  ...        0     0     0    1\n","1297         1308       NaN       3    0  ...        0     0     0    1\n","1298         1309       NaN       3    0  ...        0     1     0    0\n","\n","[20 rows x 22 columns]"]},"metadata":{"tags":[]},"execution_count":174}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":418},"id":"pDjqQRnU-GDZ","executionInfo":{"status":"ok","timestamp":1628849422924,"user_tz":-540,"elapsed":1039,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"5f6a1136-7ba7-49ca-d43d-183a5a917a9a"},"source":["g= sns.factorplot(y= 'Survived', x = 'Cabin',data=dataset, kind = 'bar', order =['A','B','C','D','E','F','G','T','X'] )\n","g = g.set_ylabels('Survival Probabilities')"],"execution_count":175,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/seaborn/categorical.py:3714: UserWarning: The `factorplot` function has been renamed to `catplot`. The original name will be removed in a future release. Please update your code. Note that the default `kind` in `factorplot` (`'point'`) has changed `'strip'` in `catplot`.\n","  warnings.warn(msg)\n"],"name":"stderr"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 360x360 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":514},"id":"KMSb8re8-GAb","executionInfo":{"status":"ok","timestamp":1628849422925,"user_tz":-540,"elapsed":21,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"4ecec6b4-1562-40be-a418-c93173beb49d"},"source":["dataset.head(15)"],"execution_count":176,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Fsize</th>\n","      <th>Single</th>\n","      <th>SmallF</th>\n","      <th>MedF</th>\n","      <th>LargeF</th>\n","      <th>Title_0</th>\n","      <th>Title_1</th>\n","      <th>Title_2</th>\n","      <th>Title_3</th>\n","      <th>Em_C</th>\n","      <th>Em_Q</th>\n","      <th>Em_S</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>A/5 21171</td>\n","      <td>1.981001</td>\n","      <td>X</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>PC 17599</td>\n","      <td>4.266662</td>\n","      <td>C</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>STON/O2. 3101282</td>\n","      <td>2.070022</td>\n","      <td>X</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>113803</td>\n","      <td>3.972177</td>\n","      <td>C</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0.0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>373450</td>\n","      <td>2.085672</td>\n","      <td>X</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>0.0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>25.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>330877</td>\n","      <td>2.135148</td>\n","      <td>X</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>7</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>54.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>17463</td>\n","      <td>3.948596</td>\n","      <td>E</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>8</td>\n","      <td>0.0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>349909</td>\n","      <td>3.048088</td>\n","      <td>X</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>9</td>\n","      <td>1.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>347742</td>\n","      <td>2.409941</td>\n","      <td>X</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>10</td>\n","      <td>1.0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>14.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>237736</td>\n","      <td>3.403555</td>\n","      <td>X</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>11</td>\n","      <td>1.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>4.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>PP 9549</td>\n","      <td>2.815409</td>\n","      <td>G</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>12</td>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>58.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>113783</td>\n","      <td>3.279030</td>\n","      <td>C</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>13</td>\n","      <td>0.0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>20.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>A/5. 2151</td>\n","      <td>2.085672</td>\n","      <td>X</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>14</td>\n","      <td>0.0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>39.0</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>347082</td>\n","      <td>3.442819</td>\n","      <td>X</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>15</td>\n","      <td>0.0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>14.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>350406</td>\n","      <td>2.061048</td>\n","      <td>X</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    PassengerId  Survived  Pclass  Sex  ...  Title_3  Em_C  Em_Q Em_S\n","0             1       0.0       3    0  ...        0     0     0    1\n","1             2       1.0       1    1  ...        0     1     0    0\n","2             3       1.0       3    1  ...        0     0     0    1\n","3             4       1.0       1    1  ...        0     0     0    1\n","4             5       0.0       3    0  ...        0     0     0    1\n","5             6       0.0       3    0  ...        0     0     1    0\n","6             7       0.0       1    0  ...        0     0     0    1\n","7             8       0.0       3    0  ...        0     0     0    1\n","8             9       1.0       3    1  ...        0     0     0    1\n","9            10       1.0       2    1  ...        0     1     0    0\n","10           11       1.0       3    1  ...        0     0     0    1\n","11           12       1.0       1    1  ...        0     0     0    1\n","12           13       0.0       3    0  ...        0     0     0    1\n","13           14       0.0       3    0  ...        0     0     0    1\n","14           15       0.0       3    1  ...        0     0     0    1\n","\n","[15 rows x 22 columns]"]},"metadata":{"tags":[]},"execution_count":176}]},{"cell_type":"code","metadata":{"id":"xKZ64oWB-F9w","executionInfo":{"status":"ok","timestamp":1628849422926,"user_tz":-540,"elapsed":20,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}}},"source":["dataset = pd.get_dummies(dataset, columns = [\"Cabin\"],prefix=\"Cabin\")\n","\n","# dataset과 train이 같지 않아서 밑에 있는 그래프가 표시되지 않은 경우가 생겼었음."],"execution_count":177,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SOBrM20Z-F3R","executionInfo":{"status":"ok","timestamp":1628849422927,"user_tz":-540,"elapsed":21,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"fb313b91-0984-4ca2-b19d-4f6e638a1fb6"},"source":["# Ticket \n","dataset['Ticket'].head()"],"execution_count":178,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0           A/5 21171\n","1            PC 17599\n","2    STON/O2. 3101282\n","3              113803\n","4              373450\n","Name: Ticket, dtype: object"]},"metadata":{"tags":[]},"execution_count":178}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jPsJPZbRJi-M","executionInfo":{"status":"ok","timestamp":1628849422927,"user_tz":-540,"elapsed":16,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"9ca35d0b-01b3-4d6b-bc62-17f4ab2de472"},"source":["# the ticket sharing the same prefixes could be booked for cabins placed together\n","\n","# I decided to replace the Ticket Feature column by the ticket prefixes. Which may be more informative\n","\n","# Treat Ticket by extracting the ticket prefix. When there is no prefix it returns X\n","\n","Ticket = []\n","for i in list(dataset.Ticket):\n","  if not i.isdigit():\n","    Ticket.append(i.replace(\".\",\"\").replace(\"/\",\"\").strip().split(' ')[0])\n","  \n","  else:\n","    Ticket.append('X')\n","  \n","dataset[\"Ticket\"] = Ticket\n","dataset['Ticket'].head()\n","\n"],"execution_count":179,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0        A5\n","1        PC\n","2    STONO2\n","3         X\n","4         X\n","Name: Ticket, dtype: object"]},"metadata":{"tags":[]},"execution_count":179}]},{"cell_type":"code","metadata":{"id":"cnRn-LjTJjDF","executionInfo":{"status":"ok","timestamp":1628849422928,"user_tz":-540,"elapsed":12,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}}},"source":["dataset = pd.get_dummies(dataset, columns = ['Ticket'], prefix = 'T')"],"execution_count":180,"outputs":[]},{"cell_type":"code","metadata":{"id":"yTw0ue9RJjHY","executionInfo":{"status":"ok","timestamp":1628849422928,"user_tz":-540,"elapsed":12,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}}},"source":["# Create Categorical Values for Pclass\n","dataset['Pclass'] = dataset['Pclass'].astype('category')\n","dataset = pd.get_dummies(dataset, columns = ['Pclass'],prefix = 'Pc')"],"execution_count":181,"outputs":[]},{"cell_type":"code","metadata":{"id":"Dk-vHpNmJjLR","executionInfo":{"status":"ok","timestamp":1628849422928,"user_tz":-540,"elapsed":12,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}}},"source":["# Drop useless variables\n","dataset.drop(labels = ['PassengerId'],axis =1, inplace =True)"],"execution_count":182,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":439},"id":"o2YPe7Y3JjOW","executionInfo":{"status":"ok","timestamp":1628849422929,"user_tz":-540,"elapsed":12,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"aab5c0ee-e448-4299-96ee-ae0f55e2eee4"},"source":["dataset"],"execution_count":183,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","      <th>Fsize</th>\n","      <th>Single</th>\n","      <th>SmallF</th>\n","      <th>MedF</th>\n","      <th>LargeF</th>\n","      <th>Title_0</th>\n","      <th>Title_1</th>\n","      <th>Title_2</th>\n","      <th>Title_3</th>\n","      <th>Em_C</th>\n","      <th>Em_Q</th>\n","      <th>Em_S</th>\n","      <th>Cabin_A</th>\n","      <th>Cabin_B</th>\n","      <th>Cabin_C</th>\n","      <th>Cabin_D</th>\n","      <th>Cabin_E</th>\n","      <th>Cabin_F</th>\n","      <th>Cabin_G</th>\n","      <th>Cabin_T</th>\n","      <th>Cabin_X</th>\n","      <th>T_A</th>\n","      <th>T_A4</th>\n","      <th>T_A5</th>\n","      <th>T_AQ3</th>\n","      <th>T_AQ4</th>\n","      <th>T_AS</th>\n","      <th>T_C</th>\n","      <th>T_CA</th>\n","      <th>T_CASOTON</th>\n","      <th>T_FC</th>\n","      <th>T_FCC</th>\n","      <th>T_Fa</th>\n","      <th>T_LINE</th>\n","      <th>T_LP</th>\n","      <th>T_PC</th>\n","      <th>T_PP</th>\n","      <th>T_PPP</th>\n","      <th>T_SC</th>\n","      <th>T_SCA3</th>\n","      <th>T_SCA4</th>\n","      <th>T_SCAH</th>\n","      <th>T_SCOW</th>\n","      <th>T_SCPARIS</th>\n","      <th>T_SCParis</th>\n","      <th>T_SOC</th>\n","      <th>T_SOP</th>\n","      <th>T_SOPP</th>\n","      <th>T_SOTONO2</th>\n","      <th>T_SOTONOQ</th>\n","      <th>T_SP</th>\n","      <th>T_STONO</th>\n","      <th>T_STONO2</th>\n","      <th>T_STONOQ</th>\n","      <th>T_SWPP</th>\n","      <th>T_WC</th>\n","      <th>T_WEP</th>\n","      <th>T_X</th>\n","      <th>Pc_1</th>\n","      <th>Pc_2</th>\n","      <th>Pc_3</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1.981001</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>4.266662</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2.070022</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.0</td>\n","      <td>1</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3.972177</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2.085672</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1294</th>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>25.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2.085672</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1295</th>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>39.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4.690430</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1296</th>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>38.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1.981001</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1297</th>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>25.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2.085672</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1298</th>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>16.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3.107198</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1299 rows × 67 columns</p>\n","</div>"],"text/plain":["      Survived  Sex   Age  SibSp  Parch  ...  T_WEP  T_X  Pc_1  Pc_2  Pc_3\n","0          0.0    0  22.0      1      0  ...      0    0     0     0     1\n","1          1.0    1  38.0      1      0  ...      0    0     1     0     0\n","2          1.0    1  26.0      0      0  ...      0    0     0     0     1\n","3          1.0    1  35.0      1      0  ...      0    1     1     0     0\n","4          0.0    0  35.0      0      0  ...      0    1     0     0     1\n","...        ...  ...   ...    ...    ...  ...    ...  ...   ...   ...   ...\n","1294       NaN    0  25.0      0      0  ...      0    0     0     0     1\n","1295       NaN    1  39.0      0      0  ...      0    0     1     0     0\n","1296       NaN    0  38.5      0      0  ...      0    0     0     0     1\n","1297       NaN    0  25.0      0      0  ...      0    1     0     0     1\n","1298       NaN    0  16.0      1      1  ...      0    1     0     0     1\n","\n","[1299 rows x 67 columns]"]},"metadata":{"tags":[]},"execution_count":183}]},{"cell_type":"markdown","metadata":{"id":"ZA124X3HJjRq"},"source":["# Modeling\n","  "]},{"cell_type":"code","metadata":{"id":"84Qm_oDcJjU2","colab":{"base_uri":"https://localhost:8080/","height":529},"executionInfo":{"status":"ok","timestamp":1628849423526,"user_tz":-540,"elapsed":608,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"ec8a3ec0-1490-4fe0-9d21-a88730635d89"},"source":["## Separate train dataset and test dataset\n","\n","train = dataset[:train_len]\n","test = dataset[train_len:]\n","test.drop(labels=[\"Survived\"],axis = 1,inplace=True)\n","test"],"execution_count":184,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/pandas/core/frame.py:4174: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  errors=errors,\n"],"name":"stderr"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","      <th>Fsize</th>\n","      <th>Single</th>\n","      <th>SmallF</th>\n","      <th>MedF</th>\n","      <th>LargeF</th>\n","      <th>Title_0</th>\n","      <th>Title_1</th>\n","      <th>Title_2</th>\n","      <th>Title_3</th>\n","      <th>Em_C</th>\n","      <th>Em_Q</th>\n","      <th>Em_S</th>\n","      <th>Cabin_A</th>\n","      <th>Cabin_B</th>\n","      <th>Cabin_C</th>\n","      <th>Cabin_D</th>\n","      <th>Cabin_E</th>\n","      <th>Cabin_F</th>\n","      <th>Cabin_G</th>\n","      <th>Cabin_T</th>\n","      <th>Cabin_X</th>\n","      <th>T_A</th>\n","      <th>T_A4</th>\n","      <th>T_A5</th>\n","      <th>T_AQ3</th>\n","      <th>T_AQ4</th>\n","      <th>T_AS</th>\n","      <th>T_C</th>\n","      <th>T_CA</th>\n","      <th>T_CASOTON</th>\n","      <th>T_FC</th>\n","      <th>T_FCC</th>\n","      <th>T_Fa</th>\n","      <th>T_LINE</th>\n","      <th>T_LP</th>\n","      <th>T_PC</th>\n","      <th>T_PP</th>\n","      <th>T_PPP</th>\n","      <th>T_SC</th>\n","      <th>T_SCA3</th>\n","      <th>T_SCA4</th>\n","      <th>T_SCAH</th>\n","      <th>T_SCOW</th>\n","      <th>T_SCPARIS</th>\n","      <th>T_SCParis</th>\n","      <th>T_SOC</th>\n","      <th>T_SOP</th>\n","      <th>T_SOPP</th>\n","      <th>T_SOTONO2</th>\n","      <th>T_SOTONOQ</th>\n","      <th>T_SP</th>\n","      <th>T_STONO</th>\n","      <th>T_STONO2</th>\n","      <th>T_STONOQ</th>\n","      <th>T_SWPP</th>\n","      <th>T_WC</th>\n","      <th>T_WEP</th>\n","      <th>T_X</th>\n","      <th>Pc_1</th>\n","      <th>Pc_2</th>\n","      <th>Pc_3</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>881</th>\n","      <td>0</td>\n","      <td>34.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2.057860</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>882</th>\n","      <td>1</td>\n","      <td>47.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1.945910</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>883</th>\n","      <td>0</td>\n","      <td>62.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2.270836</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>884</th>\n","      <td>0</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2.159003</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>885</th>\n","      <td>1</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2.508582</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1294</th>\n","      <td>0</td>\n","      <td>25.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2.085672</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1295</th>\n","      <td>1</td>\n","      <td>39.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4.690430</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1296</th>\n","      <td>0</td>\n","      <td>38.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1.981001</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1297</th>\n","      <td>0</td>\n","      <td>25.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2.085672</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1298</th>\n","      <td>0</td>\n","      <td>16.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3.107198</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>418 rows × 66 columns</p>\n","</div>"],"text/plain":["      Sex   Age  SibSp  Parch      Fare  ...  T_WEP  T_X  Pc_1  Pc_2  Pc_3\n","881     0  34.5      0      0  2.057860  ...      0    1     0     0     1\n","882     1  47.0      1      0  1.945910  ...      0    1     0     0     1\n","883     0  62.0      0      0  2.270836  ...      0    1     0     1     0\n","884     0  27.0      0      0  2.159003  ...      0    1     0     0     1\n","885     1  22.0      1      1  2.508582  ...      0    1     0     0     1\n","...   ...   ...    ...    ...       ...  ...    ...  ...   ...   ...   ...\n","1294    0  25.0      0      0  2.085672  ...      0    0     0     0     1\n","1295    1  39.0      0      0  4.690430  ...      0    0     1     0     0\n","1296    0  38.5      0      0  1.981001  ...      0    0     0     0     1\n","1297    0  25.0      0      0  2.085672  ...      0    1     0     0     1\n","1298    0  16.0      1      1  3.107198  ...      0    1     0     0     1\n","\n","[418 rows x 66 columns]"]},"metadata":{"tags":[]},"execution_count":184}]},{"cell_type":"code","metadata":{"id":"_QWsxXvNJjYM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1628849423527,"user_tz":-540,"elapsed":18,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"af43d8e2-9f49-40e1-c0fc-2c2ab6398056"},"source":["## Separate train features and label \n","\n","train[\"Survived\"] = train[\"Survived\"].astype(int)\n","\n","Y_train = train[\"Survived\"].astype(int)\n","\n","X_train = train.drop(labels = [\"Survived\"],axis = 1)"],"execution_count":185,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  This is separate from the ipykernel package so we can avoid doing imports until\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"gpq5WEkYJjbY","executionInfo":{"status":"ok","timestamp":1628849423528,"user_tz":-540,"elapsed":13,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}}},"source":["# # Separate train features and label\n","# train['Survived'] = train['Survived'].astype(int)\n","# Y_train = train['Survived']\n","# X_train = train.drop(labels= ['Survived'],axis =1)\n"],"execution_count":186,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"808TyYxIJjeZ"},"source":["#Simple Modeling\n","Cross Validate models\n","  10 popular classifiers and evaluate the mean accuracy of each of them by a stratified kfold cross validation precedure.\n","\n","  For Example, \n","  \n","  SVC,\n","  Decision Tree,\n","  Adaboost,\n","  Random Forest,\n","  Extra trees,\n","  Gradient Boosting,\n","  Multiple Layer Perceptron,\n","  KNN,\n","  Logistic Regression,\n","  Linear Discriminant Analysis\n"]},{"cell_type":"code","metadata":{"id":"3s6rvyD4Jjhl","executionInfo":{"status":"ok","timestamp":1628849423529,"user_tz":-540,"elapsed":14,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}}},"source":["#Cross Validate Model with Kfold Stratified cross Val\n","kfold = StratifiedKFold(n_splits =10)"],"execution_count":187,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZJqBgHOvYxWq","executionInfo":{"status":"ok","timestamp":1628849423529,"user_tz":-540,"elapsed":14,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}}},"source":["# !pip3 install pyforest\n","# import pyforest\n","import warnings\n","warnings.simplefilter(action='ignore', category = FutureWarning)"],"execution_count":188,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":439},"id":"_v4gjTbCbFzi","executionInfo":{"status":"ok","timestamp":1628849423529,"user_tz":-540,"elapsed":13,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"9aa3323e-7a38-44c9-bc70-7de1fac220ce"},"source":["X_train"],"execution_count":189,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","      <th>Fsize</th>\n","      <th>Single</th>\n","      <th>SmallF</th>\n","      <th>MedF</th>\n","      <th>LargeF</th>\n","      <th>Title_0</th>\n","      <th>Title_1</th>\n","      <th>Title_2</th>\n","      <th>Title_3</th>\n","      <th>Em_C</th>\n","      <th>Em_Q</th>\n","      <th>Em_S</th>\n","      <th>Cabin_A</th>\n","      <th>Cabin_B</th>\n","      <th>Cabin_C</th>\n","      <th>Cabin_D</th>\n","      <th>Cabin_E</th>\n","      <th>Cabin_F</th>\n","      <th>Cabin_G</th>\n","      <th>Cabin_T</th>\n","      <th>Cabin_X</th>\n","      <th>T_A</th>\n","      <th>T_A4</th>\n","      <th>T_A5</th>\n","      <th>T_AQ3</th>\n","      <th>T_AQ4</th>\n","      <th>T_AS</th>\n","      <th>T_C</th>\n","      <th>T_CA</th>\n","      <th>T_CASOTON</th>\n","      <th>T_FC</th>\n","      <th>T_FCC</th>\n","      <th>T_Fa</th>\n","      <th>T_LINE</th>\n","      <th>T_LP</th>\n","      <th>T_PC</th>\n","      <th>T_PP</th>\n","      <th>T_PPP</th>\n","      <th>T_SC</th>\n","      <th>T_SCA3</th>\n","      <th>T_SCA4</th>\n","      <th>T_SCAH</th>\n","      <th>T_SCOW</th>\n","      <th>T_SCPARIS</th>\n","      <th>T_SCParis</th>\n","      <th>T_SOC</th>\n","      <th>T_SOP</th>\n","      <th>T_SOPP</th>\n","      <th>T_SOTONO2</th>\n","      <th>T_SOTONOQ</th>\n","      <th>T_SP</th>\n","      <th>T_STONO</th>\n","      <th>T_STONO2</th>\n","      <th>T_STONOQ</th>\n","      <th>T_SWPP</th>\n","      <th>T_WC</th>\n","      <th>T_WEP</th>\n","      <th>T_X</th>\n","      <th>Pc_1</th>\n","      <th>Pc_2</th>\n","      <th>Pc_3</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1.981001</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>4.266662</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2.070022</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3.972177</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2.085672</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>876</th>\n","      <td>0</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2.564949</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>877</th>\n","      <td>1</td>\n","      <td>19.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3.401197</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>878</th>\n","      <td>1</td>\n","      <td>13.5</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>3.154870</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>879</th>\n","      <td>0</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3.401197</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>880</th>\n","      <td>0</td>\n","      <td>32.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2.047693</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>881 rows × 66 columns</p>\n","</div>"],"text/plain":["     Sex   Age  SibSp  Parch      Fare  ...  T_WEP  T_X  Pc_1  Pc_2  Pc_3\n","0      0  22.0      1      0  1.981001  ...      0    0     0     0     1\n","1      1  38.0      1      0  4.266662  ...      0    0     1     0     0\n","2      1  26.0      0      0  2.070022  ...      0    0     0     0     1\n","3      1  35.0      1      0  3.972177  ...      0    1     1     0     0\n","4      0  35.0      0      0  2.085672  ...      0    1     0     0     1\n","..   ...   ...    ...    ...       ...  ...    ...  ...   ...   ...   ...\n","876    0  27.0      0      0  2.564949  ...      0    1     0     1     0\n","877    1  19.0      0      0  3.401197  ...      0    1     1     0     0\n","878    1  13.5      1      2  3.154870  ...      0    0     0     0     1\n","879    0  26.0      0      0  3.401197  ...      0    1     1     0     0\n","880    0  32.0      0      0  2.047693  ...      0    1     0     0     1\n","\n","[881 rows x 66 columns]"]},"metadata":{"tags":[]},"execution_count":189}]},{"cell_type":"code","metadata":{"id":"UJ9NB8XlJjk-","colab":{"base_uri":"https://localhost:8080/","height":301},"executionInfo":{"status":"ok","timestamp":1628849438865,"user_tz":-540,"elapsed":15348,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"2f0fcef5-b919-42c3-8c66-a81042d58244"},"source":["# Modeling step Test differents algorithms \n","from sklearn.metrics import accuracy_score\n","random_state = 2\n","classifiers = []\n","classifiers.append(SVC(random_state=random_state))\n","classifiers.append(DecisionTreeClassifier(random_state=random_state))\n","classifiers.append(AdaBoostClassifier(DecisionTreeClassifier(random_state=random_state),random_state=random_state,learning_rate=0.1))\n","classifiers.append(RandomForestClassifier(random_state=random_state))\n","classifiers.append(ExtraTreesClassifier(random_state=random_state))\n","classifiers.append(GradientBoostingClassifier(random_state=random_state))\n","classifiers.append(MLPClassifier(random_state=random_state))\n","classifiers.append(KNeighborsClassifier())\n","classifiers.append(LogisticRegression(random_state = random_state))\n","classifiers.append(LinearDiscriminantAnalysis())\n","\n","\n","cv_results = []\n","for classifier in classifiers :\n","    cv_results.append(cross_val_score(classifier, X_train, y = Y_train, scoring = \"accuracy\", cv = kfold, n_jobs=-1))\n","\n","cv_means = []\n","cv_std = []\n","for cv_result in cv_results:\n","    cv_means.append(cv_result.mean())\n","    cv_std.append(cv_result.std())\n","\n","cv_res = pd.DataFrame({\"CrossValMeans\":cv_means,\"CrossValerrors\": cv_std,\"Algorithm\":[\"SVC\",\"DecisionTree\",\"AdaBoost\",\n","\"RandomForest\",\"ExtraTrees\",\"GradientBoosting\",\"MultipleLayerPerceptron\",\"KNeighboors\",\"LogisticRegression\",\"LinearDiscriminantAnalysis\"]})\n","\n","g = sns.barplot(\"CrossValMeans\",\"Algorithm\",data = cv_res, palette=\"Set3\",orient = \"h\",**{'xerr':cv_std})\n","\n","g.set_xlabel(\"Mean Accuracy\")\n","g = g.set_title(\"Cross validation scores\")\n","# orient : 수직/ 수평을 지정 \n"," # horizontal : 수평\n"," # vertical : 수직"],"execution_count":190,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"4bOPkpxZMVen"},"source":["함수의 파라미터 순서 : 일반 변수, *변수, **변수<br><br><br>\n","\n","*args, **kwargs\n","*변수 -> 여러개가 아규먼트로 들어올떄, 함수내부에서는 해당 변수를 '튜플'로 처리한다.<br>\n","**변수 -> 키워드= 로 입력할 경우에 그것을 각각 키와 값으로 가져오는 '딕셔너리'로 처리한다.\n"]},{"cell_type":"code","metadata":{"id":"yolCEwsxJjoH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1628849451930,"user_tz":-540,"elapsed":13081,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"d3327629-65b2-4892-ff77-ed94ccbf7989"},"source":["### META MODELING  WITH ADABOOST, RF, EXTRATREES and GRADIENTBOOSTING\n","# META : -에 대해서, 데이터에 대한 데이터를 통칭\n","\n","# Adaboost\n","DTC = DecisionTreeClassifier()\n","\n","adaDTC = AdaBoostClassifier(DTC, random_state=7)\n","\n","ada_param_grid = {\"base_estimator__criterion\" : [\"gini\", \"entropy\"],\n","              \"base_estimator__splitter\" :   [\"best\", \"random\"],\n","              \"algorithm\" : [\"SAMME\",\"SAMME.R\"],\n","              \"n_estimators\" :[1,2],\n","              \"learning_rate\":  [0.0001, 0.001, 0.01, 0.1, 0.2, 0.3,1.5]}\n","\n","gsadaDTC = GridSearchCV(adaDTC,param_grid = ada_param_grid, cv=kfold, scoring=\"accuracy\", n_jobs= 4, verbose = 1)\n","\n","gsadaDTC.fit(X_train,Y_train)\n","\n","ada_best = gsadaDTC.best_estimator_"],"execution_count":191,"outputs":[{"output_type":"stream","text":["Fitting 10 folds for each of 112 candidates, totalling 1120 fits\n"],"name":"stdout"},{"output_type":"stream","text":["[Parallel(n_jobs=4)]: Using backend LokyBackend with 4 concurrent workers.\n","[Parallel(n_jobs=4)]: Done  76 tasks      | elapsed:    1.8s\n","[Parallel(n_jobs=4)]: Done 968 tasks      | elapsed:   11.5s\n","[Parallel(n_jobs=4)]: Done 1120 out of 1120 | elapsed:   12.9s finished\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"WreJVIsHJjrh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1628849451931,"user_tz":-540,"elapsed":16,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"adb4200f-bdc0-4232-ebdb-b458e62bea38"},"source":["gsadaDTC.best_score_\n"],"execution_count":192,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.82073544433095"]},"metadata":{"tags":[]},"execution_count":192}]},{"cell_type":"markdown","metadata":{"id":"X20W_7W-FuxB"},"source":["decision tree\n","decision tree는 데이터를 이용하여 tree 구조를 만드는 것을 통해 이를 분류하거나 결과값을 예측하는 분석방법을 말한다.\n","이 결정트리를 만들 때에는 각 노드의 복잡성, 즉, impurity가 가장 낮은 방법으로 tree가 만들어진다. 즉, 결과노드 안에서 섞여있는 정도가 낮은 tree를 만드는 것이 목적이다. \n","복잡성을 측정하는 지표에는 entropy와 gini index가 있다.\n"]},{"cell_type":"code","metadata":{"id":"OHmAUnmxJju2","executionInfo":{"status":"ok","timestamp":1628851463363,"user_tz":-540,"elapsed":517,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}}},"source":["#ExtraTrees \n","ExtC = ExtraTreesClassifier()\n","\n","\n","## Search grid for optimal parameters\n","ex_param_grid = {\"max_depth\": [None],\n","              \"max_features\": [1, 3, 10],\n","              \"min_samples_split\": [2, 3, 10],\n","              \"min_samples_leaf\": [1, 3, 10],\n","              \"bootstrap\": [False],\n","              \"n_estimators\" :[100,300],\n","              \"criterion\": [\"gini\"]}\n","\n","\n","gsExtC = GridSearchCV(ExtC,param_grid = ex_param_grid, cv=kfold, scoring=\"accuracy\", n_jobs= -1, verbose = 1)\n","\n","# verbose는 학습 현황을 보여줌 . 0이면 안보여주겠지?\n"],"execution_count":202,"outputs":[]},{"cell_type":"code","metadata":{"id":"zNkRbvk2Jjyk","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1628851606712,"user_tz":-540,"elapsed":141633,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"5dfeff3c-5485-4685-8409-f1122adc92de"},"source":["gsExtC.fit(X_train,Y_train)"],"execution_count":203,"outputs":[{"output_type":"stream","text":["Fitting 10 folds for each of 54 candidates, totalling 540 fits\n"],"name":"stdout"},{"output_type":"stream","text":["[Parallel(n_jobs=-1)]: Using backend LokyBackend with 2 concurrent workers.\n","[Parallel(n_jobs=-1)]: Done  46 tasks      | elapsed:   14.5s\n","[Parallel(n_jobs=-1)]: Done 196 tasks      | elapsed:   49.7s\n","[Parallel(n_jobs=-1)]: Done 446 tasks      | elapsed:  1.9min\n","[Parallel(n_jobs=-1)]: Done 540 out of 540 | elapsed:  2.4min finished\n"],"name":"stderr"},{"output_type":"execute_result","data":{"text/plain":["GridSearchCV(cv=StratifiedKFold(n_splits=10, random_state=None, shuffle=False),\n","             error_score=nan,\n","             estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,\n","                                            class_weight=None, criterion='gini',\n","                                            max_depth=None, max_features='auto',\n","                                            max_leaf_nodes=None,\n","                                            max_samples=None,\n","                                            min_impurity_decrease=0.0,\n","                                            min_impurity_split=None,\n","                                            min_samples_leaf=1,\n","                                            min_samples_split=2,...\n","                                            oob_score=False, random_state=None,\n","                                            verbose=0, warm_start=False),\n","             iid='deprecated', n_jobs=-1,\n","             param_grid={'bootstrap': [False], 'criterion': ['gini'],\n","                         'max_depth': [None], 'max_features': [1, 3, 10],\n","                         'min_samples_leaf': [1, 3, 10],\n","                         'min_samples_split': [2, 3, 10],\n","                         'n_estimators': [100, 300]},\n","             pre_dispatch='2*n_jobs', refit=True, return_train_score=False,\n","             scoring='accuracy', verbose=1)"]},"metadata":{"tags":[]},"execution_count":203}]},{"cell_type":"code","metadata":{"id":"iyWKneLBJj3s","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1628851608332,"user_tz":-540,"elapsed":3,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"21d12711-0ad2-47e7-9b48-ce752084b850"},"source":["ExtC_best = gsExtC.best_estimator_\n","\n","# best score\n","gsExtC.best_score_"],"execution_count":204,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8331460674157304"]},"metadata":{"tags":[]},"execution_count":204}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vHxHaQlwHc8_","executionInfo":{"status":"ok","timestamp":1628852056192,"user_tz":-540,"elapsed":95595,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"5a9a9ea6-309c-43cf-9895-621c70eab3ef"},"source":["# Gradient Boosting tunning\n","\n","GBC = GradientBoostingClassifier()\n","gb_param_grid = {'loss':['deviance'],\n","                 'n_estimators' : [100,200,300],\n","                 'learning_rate':[0.1,0.05,0.01],\n","                 'max_depth' : [4,8],\n","                 'min_samples_leaf' : [100,150],\n","                 'max_features':[0.3,0.1]\n","                 }\n","\n","gsGBC = GridSearchCV(GBC,param_grid = gb_param_grid, cv=kfold, scoring = 'accuracy', n_jobs=4, verbose=1)\n","\n","gsGBC.fit(X_train, Y_train)\n","\n","GBC_best = gsGBC.best_estimator_\n","\n","# Best Score\n","gsGBC.best_score_"],"execution_count":205,"outputs":[{"output_type":"stream","text":["Fitting 10 folds for each of 72 candidates, totalling 720 fits\n"],"name":"stdout"},{"output_type":"stream","text":["[Parallel(n_jobs=4)]: Using backend LokyBackend with 4 concurrent workers.\n","[Parallel(n_jobs=4)]: Done  42 tasks      | elapsed:    8.1s\n","[Parallel(n_jobs=4)]: Done 192 tasks      | elapsed:   27.4s\n","[Parallel(n_jobs=4)]: Done 442 tasks      | elapsed:   59.7s\n","[Parallel(n_jobs=4)]: Done 720 out of 720 | elapsed:  1.6min finished\n"],"name":"stderr"},{"output_type":"execute_result","data":{"text/plain":["0.833158835546476"]},"metadata":{"tags":[]},"execution_count":205}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"x9NCe6ZsOwuf","executionInfo":{"status":"ok","timestamp":1628853594174,"user_tz":-540,"elapsed":152752,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"0f7ae766-b1ee-495b-88b6-22472124f396"},"source":["# RFC Parameters tunning \n","RFC = RandomForestClassifier()\n","\n","\n","## Search grid for optimal parameters\n","rf_param_grid = {\"max_depth\": [None],\n","              \"max_features\": [1, 3, 10],\n","              \"min_samples_split\": [2, 3, 10],\n","              \"min_samples_leaf\": [1, 3, 10],\n","              \"bootstrap\": [False],\n","              \"n_estimators\" :[100,300],\n","              \"criterion\": [\"gini\"]}\n","\n","\n","gsRFC = GridSearchCV(RFC,param_grid = rf_param_grid, cv=kfold, scoring=\"accuracy\", n_jobs= 4, verbose = 1)\n","\n","gsRFC.fit(X_train,Y_train)\n","\n","RFC_best = gsRFC.best_estimator_\n","\n","# Best score\n","gsRFC.best_score_"],"execution_count":206,"outputs":[{"output_type":"stream","text":["Fitting 10 folds for each of 54 candidates, totalling 540 fits\n"],"name":"stdout"},{"output_type":"stream","text":["[Parallel(n_jobs=4)]: Using backend LokyBackend with 4 concurrent workers.\n","[Parallel(n_jobs=4)]: Done  42 tasks      | elapsed:   16.0s\n","[Parallel(n_jobs=4)]: Done 192 tasks      | elapsed:   52.1s\n","[Parallel(n_jobs=4)]: Done 442 tasks      | elapsed:  2.1min\n","[Parallel(n_jobs=4)]: Done 540 out of 540 | elapsed:  2.5min finished\n"],"name":"stderr"},{"output_type":"execute_result","data":{"text/plain":["0.8377170582226763"]},"metadata":{"tags":[]},"execution_count":206}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tz2QI5b-Ox7a","executionInfo":{"status":"ok","timestamp":1628853676817,"user_tz":-540,"elapsed":82647,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"6259cc03-a021-4460-f378-c2bda213a513"},"source":["### SVC classifier\n","SVMC = SVC(probability=True)\n","svc_param_grid = {'kernel': ['rbf'], \n","                  'gamma': [ 0.001, 0.01, 0.1, 1],\n","                  'C': [1, 10, 50, 100,200,300, 1000]}\n","\n","gsSVMC = GridSearchCV(SVMC,param_grid = svc_param_grid, cv=kfold, scoring=\"accuracy\", n_jobs= 4, verbose = 1)\n","\n","gsSVMC.fit(X_train,Y_train)\n","\n","SVMC_best = gsSVMC.best_estimator_\n","\n","# Best score\n","gsSVMC.best_score_"],"execution_count":207,"outputs":[{"output_type":"stream","text":["Fitting 10 folds for each of 28 candidates, totalling 280 fits\n"],"name":"stdout"},{"output_type":"stream","text":["[Parallel(n_jobs=4)]: Using backend LokyBackend with 4 concurrent workers.\n","[Parallel(n_jobs=4)]: Done  42 tasks      | elapsed:    9.9s\n","[Parallel(n_jobs=4)]: Done 192 tasks      | elapsed:   48.8s\n","[Parallel(n_jobs=4)]: Done 280 out of 280 | elapsed:  1.4min finished\n"],"name":"stderr"},{"output_type":"execute_result","data":{"text/plain":["0.8331332992849847"]},"metadata":{"tags":[]},"execution_count":207}]},{"cell_type":"markdown","metadata":{"id":"q_aUB6t8KY4q"},"source":["#파이썬 asterisk 사용하는 경우\n","  곱셈 및 거듭제곱 연산으로 사용할 떄\n","<br>\n","\n","\n","  리스트형 컨테이너 타입의 데이터를 반복 확장하고자 할때<br>\n","  가변인자를 사용하고자 할떄<br>\n","  컨테이너 타입이 데이터를 Unpacking 할 떄 \n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"PNZNTwheHc5_","executionInfo":{"status":"ok","timestamp":1628854098765,"user_tz":-540,"elapsed":42824,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"d95dca42-10fc-495f-c5c3-aa670fe83bf7"},"source":["def plot_learning_curve(estimator, title, X,y,ylim=None, cv=None, n_jobs=-1, train_sizes=np.linspace(.1,1.0,5)):\n","  'Generate a simple Plot of the test and training learning curve'\n","  plt.figure()\n","  plt.title(title)\n","  if ylim is not None:\n","    plt.ylim(*ylim)\n","  plt.xlabel('Training examples')\n","  plt.ylabel('Score')\n","  train_size, train_scores,test_scores = learning_curve(\n","      estimator, X,y,cv=cv, n_jobs = n_jobs, train_sizes = train_sizes\n","  )\n","  train_scores_mean = np.mean(train_scores, axis=1)\n","  train_scores_std = np.std(train_scores,axis=1)\n","  test_scores_mean = np.mean(test_scores, axis=1)\n","  test_scores_std = np.std(test_scores, axis =1)\n","  plt.grid()\n","\n","  plt.fill_between(train_sizes, train_scores_mean - train_scores_std,\n","                     train_scores_mean + train_scores_std, alpha=0.1,\n","                     color=\"r\")\n","  plt.fill_between(train_sizes, test_scores_mean - test_scores_std,\n","                     test_scores_mean + test_scores_std, alpha=0.1, color=\"g\")\n","  plt.plot(train_sizes, train_scores_mean, 'o-', color=\"r\",\n","             label=\"Training score\")\n","  plt.plot(train_sizes, test_scores_mean, 'o-', color=\"g\",\n","             label=\"Cross-validation score\")\n","\n","  plt.legend(loc=\"best\")\n","  return plt\n","\n","g = plot_learning_curve(gsRFC.best_estimator_,\"RF mearning curves\",X_train,Y_train,cv=kfold)\n","g = plot_learning_curve(gsExtC.best_estimator_,\"ExtraTrees learning curves\",X_train,Y_train,cv=kfold)\n","g = plot_learning_curve(gsSVMC.best_estimator_,\"SVC learning curves\",X_train,Y_train,cv=kfold)\n","g = plot_learning_curve(gsadaDTC.best_estimator_,\"AdaBoost learning curves\",X_train,Y_train,cv=kfold)\n","g = plot_learning_curve(gsGBC.best_estimator_,\"GradientBoosting learning curves\",X_train,Y_train,cv=kfold)\n","\n","\n","# GradientBoosting and Adaboost classifiers tend to overfit the training set. According to the growing cross-validation curves GradientBoosting and Adaboost could perform better with more training examples.\n","\n","# SVC and ExtraTrees classifiers seem to better generalize the prediction since the training and cross-validation curves are close together."],"execution_count":208,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAZAAAAEcCAYAAADpzeJvAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nOzdeVyVZf7/8dfZWGQVBYTQNC0lQXNJM20sNTXTMBvNbNqmsczKZvpNSsuobZZO0zKOZtl3bJx0ZtLcQDRHMy0zm8hccs1wQRAQZIez3Pf9++MscOQoeIQDyOf5eBTn3Ot1bvB+n+u67uu+dZqmaQghhBCXSN/YBRBCCNE8SYAIIYTwigSIEEIIr0iACCGE8IoEiBBCCK9IgAghhPCKBIhodMnJybzzzjuNXYzL0rVrV06cOOHz/a5bt47f/va3Pt+vECABIhrQAw88wI033ojFYqnXbSYmJtKrVy/69OnD/fffz+HDh+tt+5405YC76667+Pvf/97YxRAtlASIaBCZmZl8//336HQ6tmzZUq/bnjlzJrt37+a7776jX79+TJ8+vV6331Romoaqqo1djMtyJXwGcWESIKJBrFmzhp49e3L33XezZs0at3kHDhzg7rvvplevXvz+97/HbDa75hUVFfH4449z0003ceONN/L4449z5swZj/swGAzceeedHDt2zDXNYrHw+uuvM2jQIAYNGsTrr7/uVgP69NNPuf322+nXrx9TpkwhJycHsJ/o5syZw4ABA+jduzdjxozhyJEj/Oc//yElJYX/+7//o1evXkyZMqXWz26xWJg7dy633norN998MzNnzqSysrJOn++BBx7gnXfeYeLEifTs2ZNTp07RtWtX/vWvfzF8+HD69u3Lyy+/jPMGEqtWreK+++5zrX+xZRVF4c0336R///4MGTKETz75hK5du2Kz2Tx+juzsbJ566iluuukm+vfvzyuvvALA/Pnz+eMf/+haLjMz020753+Gjz76iHHjxrlt++OPP3Ydy4sdr4KCAh5//HH69u1Lv379mDRpkgRSEyIBIhrE2rVrGTNmDGPGjOHrr7/m7NmzgP1k8eSTT5KUlMR3333HyJEj2bRpk2s9VVUZN24cW7duZevWrfj7+7tOXOezWCykpKTQs2dP17T333+fPXv2sHbtWtatW8e+fftYuHAhADt37uQvf/kL7777Ll9//TVXXXUVzz77LABff/0133//PZ9//jnp6em8++67hIeHc++99zJmzBgeffRRdu/ezaJFi2r97G+99RYZGRmsWbOGTZs2kZuby4IFC+r8+dauXcurr77KDz/8QGxsLABffvklK1euZN26dWzYsIGvvvrqgvu/0LKffvop27dvZ+3ataxevZrNmzdfcBuKovD4448TGxvLF198wfbt2xk1alStn93TZ7jvvvvIyMjg+PHjrvkpKSmMGTOm1uO1ZMkSoqOj2blzJzt27ODZZ59Fp9PVuRyiYUmAiHr3/fffk5WVxR133EFCQgLt27cnNTUVgD179mC1WnnooYcwmUyMHDmSxMRE17qtW7dmxIgRBAYGEhwczBNPPMH//vc/t+2/9tpr9O3bl969e/PJJ5/w1FNPuealpKTw5JNP0qZNGyIiInjyySdZt26da94999xD9+7d8fPz49lnn+XHH38kMzMTo9FIWVkZv/zyC5qm0blzZ6Kioi75s2uaxqeffsoLL7xAeHg4wcHBPP7446xfv77On+/uu+/m2muvxWg0YjKZAJg8eTKhoaHExsbSv39/Dh06dMEyXGjZDRs28OCDD9KuXTvCwsJ47LHHLriNvXv3kpuby/Tp02nVqhX+/v707du3zseh+mcICQlh6NChrr+B48eP88svvzBkyJBaj5fRaCQvL4+srCxMJhN9+/aVAGlCjI1dAHHlWbNmDQMHDiQiIgKA0aNHs3r1ah5++GFyc3OJjo52Owk4v2UDVFRU8MYbb/DVV19RVFQEQFlZGYqiYDAYAHjppZcYP348qqryww8/8MQTT/DPf/6Tbt26kZub67a92NhYcnNzAcjNzaV79+6ueUFBQYSHh5OTk8OAAQO4//77eeWVVzh9+jTDhw9nxowZBAcHX9JnLygooKKiwq3Jpno/QF0+X0xMTI3tRkZGul4HBgZSVlZ2wTJcaNnc3Fy3bbdr1+6C28jOziY2Nhaj0btTxPmfYcyYMbz55ps89dRTpKamMmzYMAIDA8nPz7/o8Xr00Uf529/+5rrS7N57771o8AnfkgAR9aqyspINGzagqioDBw4E7E1NxcXFHDp0iMjISHJyctA0zRUiWVlZtG/fHoC///3vZGRk8OmnnxIZGcnBgwcZO3Ysnm4ardfr6du3Lx06dGDHjh10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Op2O66+/nuHDh+Pv78/8+fN58803KS8vR6/XM2PGDG6++Wb++te/unWiv/fee241oereeust3njjDcaMGQNAUFAQr7/+OpGRkQ322ZsynaZpWmMXoqFlZmYydOhQtmzZckkDCatfhdU6MIyx8SPoH9erAUta1UkeFhBSo5P8Sho4Vx+upONx8ODByxo42xIGzpWWlhIcHIyqqrz44otERUV57IiHlnE8LkVdjoenv8Hazp1SA7mIW67uxy1X97vgSPT65BpJbvInNCBUOsmFOM+MGTM4ffo0lZWVdO/encmTJzd2kVo8CZBGJiPJhaibBQsWNHYRxHkkQBpR1UjyIIL9gmQkuRCiWZEAaQSqpmJRrJh0BukkF0I0WxIgPubsJA8NCCbI1EpGkgshmi0JEB+RTnIhxJVGAqSBSSe5EOJKJb22Dciq2Ki0mQkyBRIV1FbCQzQbCyUzJAAAFwJJREFUVquV9957jxEjRjBmzBjGjh3Lm2++ibWB77VVHx544AG2b98OwHvvvUdaWprH5ebPn++6K/jFrFq1ioyMDNf7LVu21Gm9lkBqIA1A1VQsNgsmvZFI6SQXDcQ50DW/vICIwHAm9bybW67uVy/bfv755zGbzXz22WcEBwdjs9n47LPPsFgsNe4D5XxQXFP0zDPPXPY2Vq9eTevWrV23N2lOzzBp6N+NBEg9q+okD5FOctFgzn/cQH5FIR/8z/6AtcsNkePHj7N582a2bdvmesyu0Wjk3nvvBezfyNetW0dQUBAnTpzgz3/+M3l5ebz99tsoikJERASvvPIKV199Nb/88gvPP/+86x5Wd999N48++iibN2/mvffeQ6/XoygKf/rTn+jfv79bORYuXEhhYSEvvPACAOfOnWPkyJFs3bqVPXv28O6772I2m1EUhSlTpnDnnXfW+CzJyckkJCTwm9/8hpKSEl588UWOHDlCZGQk7dq1o23btoD9HlietvfZZ5+xf/9+XnvtNd59911mzJjBmTNnXM8wAfjwww9d9+ZKTEzkpZdeIigoiPnz55ORkUFJSQmnTp2iQ4cOvPfeewQGBrqVsaKighkzZvDzzz9jNBrp1KkT7733HgArV65k6dKlAJhMJj744APatm3LmjVr+L//+z8AOnTowCuvvEKbNm08/m4sFgvz5s2joqICgGnTpnHrrbde1t+IkwRIPVFUBati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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":898},"id":"cs2DMvUnHc3e","executionInfo":{"status":"ok","timestamp":1628854825439,"user_tz":-540,"elapsed":3946,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"f1cb4297-8c3a-41e7-bbb8-9525c5aeab89"},"source":["nrows = ncols = 2\n","fig, axes = plt.subplots(nrows = nrows, ncols = ncols, sharex=\"all\", figsize=(15,15))\n","\n","names_classifiers = [(\"AdaBoosting\", ada_best),(\"ExtraTrees\",ExtC_best),(\"RandomForest\",RFC_best),(\"GradientBoosting\",GBC_best)]\n","\n","# indice : 인덱스\n","\n","nclassifier = 0\n","for row in range(nrows):\n","    for col in range(ncols):\n","        name = names_classifiers[nclassifier][0]\n","        classifier = names_classifiers[nclassifier][1]\n","        indices = np.argsort(classifier.feature_importances_)[::-1][:40]\n","        g = sns.barplot(y=X_train.columns[indices][:40],x = classifier.feature_importances_[indices][:40] , orient='h',ax=axes[row][col])\n","        g.set_xlabel(\"Relative importance\",fontsize=12)\n","        g.set_ylabel(\"Features\",fontsize=12)\n","        g.tick_params(labelsize=9)\n","        g.set_title(name + \" feature importance\")\n","        nclassifier += 1\n","\n","# a.[argsort()] -> 오름차순\n","# a[a.argsort()[::-1]]"],"execution_count":211,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1080x1080 with 4 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":272},"id":"tOYFlnzZHc1B","executionInfo":{"status":"ok","timestamp":1628856134083,"user_tz":-540,"elapsed":1071,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"e44d187c-ff83-49be-8e1b-2ed750611d83"},"source":["test_Survived_RFC = pd.Series(RFC_best.predict(test), name = 'RFC')\n","test_Survived_ExtC = pd.Series(ExtC_best.predict(test), name = 'ExtC')\n","test_Survived_SVMC = pd.Series(SVMC_best.predict(test), name = 'SVC')\n","test_Survived_AdaC = pd.Series(ada_best.predict(test), name=\"Ada\")\n","test_Survived_GBC = pd.Series(GBC_best.predict(test), name=\"GBC\")\n","\n","\n","# Concatenate all classifier results\n","ensemble_results = pd.concat([test_Survived_RFC,test_Survived_ExtC,test_Survived_AdaC,test_Survived_GBC, test_Survived_SVMC],axis=1)\n","\n","\n","g= sns.heatmap(ensemble_results.corr(),annot=True)"],"execution_count":212,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 2 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"aTpA8WEVHcxO","executionInfo":{"status":"ok","timestamp":1628856218909,"user_tz":-540,"elapsed":3766,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}}},"source":["# Ensemble Modeling\n","votingC = VotingClassifier(estimators=[('rfc', RFC_best), ('extc', ExtC_best),\n","('svc', SVMC_best), ('adac',ada_best),('gbc',GBC_best)], voting='soft', n_jobs=4)\n","\n","votingC = votingC.fit(X_train, Y_train)"],"execution_count":213,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":419},"id":"CFFkYzD0Hcue","executionInfo":{"status":"ok","timestamp":1628856266229,"user_tz":-540,"elapsed":350,"user":{"displayName":"주민철","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiyWit6t5NLiDB8JMoc--Zl6z9w2XkJj6cKjnc0Bg=s64","userId":"03090286669885790719"}},"outputId":"0757aac5-829b-410c-c672-48f33ae19d71"},"source":["test_Survived = pd.Series(votingC.predict(test), name=\"Survived\")\n","\n","results = pd.concat([IDtest,test_Survived],axis=1)\n","\n","\n","# results.to_csv(\"ensemble_python_voting.csv\",index=False)\n","results"],"execution_count":215,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>892</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>893</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>894</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>895</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>896</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>413</th>\n","      <td>1305</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>414</th>\n","      <td>1306</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>415</th>\n","      <td>1307</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>416</th>\n","      <td>1308</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>417</th>\n","      <td>1309</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>418 rows × 2 columns</p>\n","</div>"],"text/plain":["     PassengerId  Survived\n","0            892         0\n","1            893         0\n","2            894         0\n","3            895         0\n","4            896         1\n","..           ...       ...\n","413         1305         0\n","414         1306         1\n","415         1307         0\n","416         1308         0\n","417         1309         1\n","\n","[418 rows x 2 columns]"]},"metadata":{"tags":[]},"execution_count":215}]}]}